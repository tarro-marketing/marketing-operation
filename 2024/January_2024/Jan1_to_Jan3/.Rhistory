combo_data <- combo_data |>
mutate(Format = if_else(str_detect(Referrer, "floating"), "Floating CTA", "No Floating"))
sms_form <-
combo_data |>
filter(str_detect(filename, 'SMS'))
View(sms_form)
library(dplyr)
library(tidyr)
# Assuming 'trackable' is your data frame
# MEL
MEL <- trackable %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "MEL")
trackable_by_mobile = inner_join(sms_lead, sent_list,by=c("Mobile - Primary"="phone_number"))
library(tidyverse)
sms_lead <- read_csv("sms-dec-19to23-2023.csv")
sms_lead$`Mobile - Primary` <- as.double(gsub("[^0-9]", "", sms_lead$`Mobile - Primary`))
sms_lead$`Business Phone` <- as.double(gsub("[^0-9]", "", sms_lead$`Business Phone`))
MEL <- sms_lead |>
nrow()
MQL_jotform <- sms_lead |>
filter(`Created By`=='JotForm Integration User',
`Menu Type`!='',
`State/Province (text only)`!='') |>
nrow()
MQL_rest <- sms_lead |>
filter(`Created By`!='JotForm Integration User',
`Menu Type`!='',
`State/Province (text only)`!='',
`Lead Status` == 'AE Assigned' | `Lead Status` == 'Converted') |>
nrow()
MQL = MQL_jotform+MQL_rest
cohorted_SQL <- sms_lead |>
filter(`Opportunity ID`!='') |>
nrow()
CW <- sms_lead |>
filter(Stage== 'Closed Won' | Stage =='Onboarded') |>
nrow()
result_table <- data.frame(
Metric = c("MEL", "MQL", "cohorted_SQL", "CW"),
Count = c(MEL, MQL, cohorted_SQL, CW)
)
click_combo_data <- read_csv("../Clean Data/click_combo_data.csv")
sent_list <- read_csv("../Clean Data/sent_list.csv")
sms_inbound_call <- read_csv("sms_inbound_call.csv")
by_in_bound_call = inner_join(sms_lead, sms_inbound_call,by=c("Mobile - Primary"="Phone"))
trackable_by_mobile = inner_join(sms_lead, sent_list,by=c("Mobile - Primary"="phone_number"))
trackable_by_business = inner_join(sms_lead, sent_list,by=c("Business Phone"="phone_number"))
trackable <- rbind(trackable_by_mobile,trackable_by_business)
library(dplyr)
library(tidyr)
# Assuming 'trackable' is your data frame
# MEL
MEL <- trackable %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "MEL")
# MQL_jotform
MQL_jotform <- trackable %>%
filter(`Created By` == 'JotForm Integration User',
`Menu Type` != '',
`State/Province (text only)` != '') %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "MQL")
# MQL_rest
MQL_rest <- trackable %>%
filter(`Created By` != 'JotForm Integration User',
`Menu Type` != '',
`State/Province (text only)` != '',
`Lead Status` %in% c('AE Assigned', 'Converted')) %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "MQL")
# Combine MQL_jotform and MQL_rest
MQL <- bind_rows(MQL_jotform, MQL_rest) %>%
group_by(Format) %>%
summarise(counts = sum(counts), Metric = "MQL")
# Cohorted SQL
cohorted_SQL <- trackable %>%
filter(`Opportunity ID` != '') %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "cohorted_SQL")
# CW
CW <- trackable %>%
filter(Stage %in% c('Closed Won', 'Onboarded')) %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "CW")
# Combine all metrics
all_metrics <- bind_rows(MEL, MQL, cohorted_SQL, CW)
# Pivot the data
pivoted_data <- all_metrics %>%
pivot_wider(names_from = Metric, values_from = counts, values_fill = 0)
# Print the pivoted data
print(pivoted_data)
View(MQL)
trackable_by_mobile = inner_join(sms_lead, sent_list,by=c("Mobile - Primary"="phone_number"))
trackable_by_business = inner_join(sms_lead, sent_list,by=c("Business Phone"="phone_number"))
trackable <- rbind(trackable_by_mobile,trackable_by_business)
View(trackable)
library(dplyr)
library(tidyr)
# Assuming 'trackable' is your data frame
# MEL
MEL <- trackable %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "MEL")
# MQL_jotform
MQL_jotform <- trackable %>%
filter(`Created By` == 'JotForm Integration User',
`Menu Type` != '',
`State/Province (text only)` != '') %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "MQL")
# MQL_rest
MQL_rest <- trackable %>%
filter(`Created By` != 'JotForm Integration User',
`Menu Type` != '',
`State/Province (text only)` != '',
`Lead Status` %in% c('AE Assigned', 'Converted')) %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "MQL")
# Combine MQL_jotform and MQL_rest
MQL <- bind_rows(MQL_jotform, MQL_rest) %>%
group_by(Format) %>%
summarise(counts = sum(counts), Metric = "MQL")
# Cohorted SQL
cohorted_SQL <- trackable %>%
filter(`Opportunity ID` != '') %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "cohorted_SQL")
# CW
CW <- trackable %>%
filter(Stage %in% c('Closed Won', 'Onboarded')) %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "CW")
# Combine all metrics
all_metrics <- bind_rows(MEL, MQL, cohorted_SQL, CW)
# Pivot the data
pivoted_data <- all_metrics %>%
pivot_wider(names_from = Metric, values_from = counts, values_fill = 0)
# Print the pivoted data
print(pivoted_data)
View(MQL_jotform)
View(MQL_rest)
MQL_rest <- trackable %>%
filter(`Created By` != 'JotForm Integration User',
`Menu Type` != '',
`State/Province (text only)` != '',
`Lead Status` %in% c('AE Assigned', 'Converted'))
trackable %>%
filter(`Created By` != 'JotForm Integration User',
`Menu Type` != '',
`State/Province (text only)` != '',
`Lead Status` %in% c('AE Assigned', 'Converted'))
trackable %>%
filter(`Created By` != 'JotForm Integration User',
`Menu Type` != '',
`State/Province (text only)` != '',
`Lead Status` %in% c('AE Assigned', 'Converted')) %>%
group_by(Format) %>%
summarise(counts = n(), Metric = "MQL")
library(tidyverse)
sms_lead <- read_csv("sms-dec-19to23-2023.csv")
sms_lead$`Mobile - Primary` <- as.double(gsub("[^0-9]", "", sms_lead$`Mobile - Primary`))
sms_lead$`Business Phone` <- as.double(gsub("[^0-9]", "", sms_lead$`Business Phone`))
library(tidyverse)
sms_lead <- read_csv("sms-dec-19to23-2023.csv")
sms_lead$`Mobile - Primary` <- as.double(gsub("[^0-9]", "", sms_lead$`Mobile - Primary`))
sms_lead$`Business Phone` <- as.double(gsub("[^0-9]", "", sms_lead$`Business Phone`))
click_combo_data <- read_csv("../Clean Data/click_combo_data.csv")
sent_list <- read_csv("../Clean Data/sent_list.csv")
sms_inbound_call <- read_csv("sms_inbound_call.csv")
library(tidyverse)
sms_lead <- read_csv("sms-dec-19to23-2023.csv")
sms_lead$`Mobile - Primary` <- as.double(gsub("[^0-9]", "", sms_lead$`Mobile - Primary`))
sms_lead$`Business Phone` <- as.double(gsub("[^0-9]", "", sms_lead$`Business Phone`))
click_combo_data <- read_csv("../Clean Data/click_combo_data.csv")
sent_list <- read_csv("../Clean Data/sent_list.csv")
sms_inbound_call <- read_csv("sms_inbound_call.csv")
by_in_bound_call = inner_join(sms_lead, sms_inbound_call,by=c("Mobile - Primary"="Phone"))
trackable_by_mobile = inner_join(sms_lead, sent_list,by=c("Mobile - Primary"="phone_number"))
trackable_by_business = inner_join(sms_lead, sent_list,by=c("Business Phone"="phone_number"))
trackable <- rbind(trackable_by_mobile,trackable_by_business)
writ
write_csv(trackable, "../Clean Data/trackable_lead.csv")
knitr::opts_chunk$set(echo = TRUE)
folder_path <- '~/Performance Analysis/Form Submission/12-18_12-24/data'
filenames <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
combo_data <- purrr::map_df(filenames,
~read.csv(.x, stringsAsFactors = FALSE) %>% mutate(filename = .x))
library(tidyverse)
library(purrr)
library(dplyr)
folder_path <- '~/Performance Analysis/Form Submission/12-18_12-24/data'
filenames <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
combo_data <- purrr::map_df(filenames,
~read.csv(.x, stringsAsFactors = FALSE) %>% mutate(filename = .x))
View(combo_data)
View(combo_data)
combo_data |>
filter(Form.Name..ID. = str_detect(Form.Name..ID., "DM"))
combo_data |>
filter(Form.Name..ID. == str_detect(Form.Name..ID., "DM"))
combo_data |>
filter(str_detect(Form.Name..ID., "DM"))
combo_data |>
filter(str_detect(Form.Name..ID., "DM")) -> dm_form_submit
View(dm_form_submit)
write_csv(dm_form_submit, "DM/12_18_form_submit.csv")
write_csv(dm_form_submit, "SMS/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SMS")) -> SMS_form_submit
write_csv(dm_form_submit, "SMS/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SMS")) -> SMS_form_submit
write_csv(SMS_form_submit, "SMS/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SMS")) -> SMS_form_submit
write_csv(SMS_form_submit, "SMS/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SEM")) -> SEM_form_submit
write_csv(SEM_form_submit, "SEM/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "YouTube")) -> YouTube_form_submit
write_csv(YouTube_form_submit, "YouTube /12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "YouTube")) -> YouTube_form_submit
write_csv(YouTube_form_submit, "YouTube/12_18_form_submit.csv")
View(combo_data)
combo_data |>
filter(str_detect(Form.Name..ID., "Display")) -> Display_form_submit
write_csv(Display_form_submit, "Display/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SEO") | str_detect(Form.Name..ID., "Direct")) -> SEO_Direct_form_submit
write_csv(SEO_Direct_form_submit, "Direct - SEO/12_18_form_submit.csv")
View(SEO_Direct_form_submit)
combo_data |>
filter(str_detect(Form.Name..ID., "DSP") | str_detect(Form.Name..ID., "DSP")) -> DSP_form_submit
write_csv(DSP_Direct_form_submit, "DSP/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "DSP")) -> DSP_form_submit
write_csv(DSP_Direct_form_submit, "DSP/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "DSP")) -> DSP_form_submit
write_csv(DSP_form_submit, "DSP/12_18_form_submit.csv")
get wd
getwd()
setwd(~Downloads)
setwd("~C:/Users/skt/Downloads)
""
~
!
``
setwd("C:/Users/skt/Downloads)
""
setwd("C:/Users/skt/Downloads")
library(tidyverse)
funnel_report_lead <- read_csv("report1704226244186.csv")
mql_dash <- read_csv("report1704226293103.csv")
funnel_report_lead <- read_csv("report1704226244186.csv")
mql_dash <- read_csv("report1704226293103.csv")
View(funnel_report_lead)
View(mql_dash)
funnel_report_lead <- read_csv("report1704226244186.csv")
mql_dash <- read_csv("report1704226413279.csv")
View(mql_dash)
View(mql_dash)
View(mql_dash)
funnel_report_lead <- read_csv("report1704226244186.csv")
sfdc_mql <- read_csv("sfdc mql.csv")
View(sfdc_mql)
funnel_report_lead |>
filter(`Created Date` >= "10/1/2023")
funnel_report_lead |>
filter(`Created Date` >= "10/1/2023" & `Created Date` <= "12/31/2023") -> Q4_funnel
sfdc_mql |>
filter(`Created Date` >= "10/1/2023" & `Created Date` <= "12/31/2023") -> Q4_mql_dash
Q4_funnel |>
filter(`Menu Type` = "" & `State/Province (text only)` = "" & (`Created By` = "JotForm Integration User" | `Lead Status` = "Converted" ||`Lead Status` = "AE Assigned"))
Q4_funnel |>
filter(`Menu Type` == "" & `State/Province (text only)` == "" & (`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" |`Lead Status` == "AE Assigned")))
Q4_funnel |>
filter(`Menu Type` == "" & `State/Province (text only)` == "" & (`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned")))
Q4_funnel |>
filter(`Menu Type` == "" & `State/Province (text only)` == "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | "AE Assigned"))
Q4_funnel |>
filter(`Menu Type` == "" & `State/Province (text only)` == "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned"))
View(Q4_funnel)
Q4_funnel |>
filter(`Menu Type` == "" & `State/Province (text only)` == "")
funnel_report_lead |>
filter(`Created Date` >= "10/1/2023" & `Created Date` <= "12/31/2023") -> Q4_funnel
Q4_funnel |>
filter(`Menu Type` == "" & `State/Province (text only)` == "")
filter(`Menu Type` != "" & `State/Province (text only)` != "")
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "")
filter(`Menu Type` != "" & `State/Province (text only)` != "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned"))
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned"))
View(sfdc_mql)
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned")) -> mql
View(mql)
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned")) |>
filter(`Unqualified Reason`!= "Current Client", "Duplicate", "Not a Restaurant")-> mql
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned")) |>
filter(`Unqualified Reason`!= "Current Client"| `Unqualified Reason`!= "Duplicate" | `Unqualified Reason`!= "Not a Restaurant")-> mql
View(mql)
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "")
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned"))
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned")) |>
filter(`Unqualified Reason`!= "Current Client"| `Unqualified Reason`!= "Duplicate" | `Unqualified Reason`!= "Not a Restaurant")
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned")) |>
filter(`Unqualified Reason`!= "Current Client") |>
filter(`Unqualified Reason`!= "Duplicate") |>
filter(`Unqualified Reason`!= "Not a Restaurant")-> mql
Q4_funnel |>
filter(`Menu Type` != "" & `State/Province (text only)` != "") |>
filter(`Created By` == "JotForm Integration User" | (`Lead Status` == "Converted" | `Lead Status` == "AE Assigned")) |>
filter(`Unqualified Reason`!= "Current Client")
same_filter <- read_csv("report1704239166583.csv")
View(same_filter)
View(sfdc_mql)
library(readr)
report1704239362422 <- read_csv("report1704239362422.csv")
View(report1704239362422)
library(readr)
report1704239417933 <- read_csv("report1704239417933.csv")
View(report1704239417933)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(purrr)
library(dplyr)
folder_path <- '~/Performance Analysis/Form Submission/form submission jan 3'
filenames <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
combo_data <- purrr::map_df(filenames,
~read.csv(.x, stringsAsFactors = FALSE) %>% mutate(filename = .x))
getwd
getwd()
setwd("~/Performance Analysis/Form Submission/form submission jan 3")
getwd()
combo_data <- combo_data %>%
mutate(filename = as.character(filename)) %>%
mutate(filename = str_remove(filename, "^C:/.*export-")) %>%
rename(phone_number = `手机号码`) %>%
mutate(phone_number = str_replace_all(phone_number, "-", "") %>%
str_replace_all("[^0-9]", ""))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(purrr)
library(dplyr)
folder_path <- '~/Performance Analysis/Form Submission/form submission jan 3'
filenames <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
combo_data <- purrr::map_df(filenames,
~read.csv(.x, stringsAsFactors = FALSE) %>% mutate(filename = .x))
combo_data <- combo_data %>%
mutate(filename = as.character(filename)) %>%
mutate(filename = str_remove(filename, "^C:/.*export-")) %>%
rename(phone_number = `手机号码`) %>%
mutate(phone_number = str_replace_all(phone_number, "-", "") %>%
str_replace_all("[^0-9]", ""))
combo_data <- combo_data |>
mutate(Format = if_else(str_detect(Referrer, "floating"), "Floating CTA", "No Floating"))
sms_form <-
combo_data |>
filter(str_detect(filename, 'SMS'))
combo_data |>
filter(str_detect(Form.Name..ID., "DM")) -> dm_form_submit
write_csv(dm_form_submit, "DM/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SMS")) -> SMS_form_submit
write_csv(SMS_form_submit, "SMS/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SEM")) -> SEM_form_submit
write_csv(SEM_form_submit, "SEM/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "YouTube")) -> YouTube_form_submit
write_csv(YouTube_form_submit, "YouTube/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "Display")) -> Display_form_submit
write_csv(Display_form_submit, "Display/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SEO") | str_detect(Form.Name..ID., "Direct")) -> SEO_Direct_form_submit
write_csv(SEO_Direct_form_submit, "Direct - SEO/12_18_form_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "DSP")) -> DSP_form_submit
write_csv(DSP_form_submit, "DSP/12_18_form_submit.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(purrr)
library(dplyr)
folder_path <- '~/Performance Analysis/Form Submission/form submission jan 3'
filenames <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
combo_data <- purrr::map_df(filenames,
~read.csv(.x, stringsAsFactors = FALSE) %>% mutate(filename = .x))
combo_data <- combo_data %>%
mutate(filename = as.character(filename)) %>%
mutate(filename = str_remove(filename, "^C:/.*export-")) %>%
rename(phone_number = `手机号码`) %>%
mutate(phone_number = str_replace_all(phone_number, "-", "") %>%
str_replace_all("[^0-9]", ""))
combo_data <- combo_data |>
mutate(Format = if_else(str_detect(Referrer, "floating"), "Floating CTA", "No Floating"))
sms_form <-
combo_data |>
filter(str_detect(filename, 'SMS'))
combo_data |>
filter(str_detect(Form.Name..ID., "DM")) -> dm_form_submit
write_csv(dm_form_submit, "DM/dm_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SMS")) -> SMS_form_submit
write_csv(SMS_form_submit, "SMS/sms_submit")
combo_data |>
filter(str_detect(Form.Name..ID., "SEM")) -> SEM_form_submit
write_csv(SEM_form_submit, "SEM/sem_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "YouTube")) -> YouTube_form_submit
write_csv(YouTube_form_submit, "YouTube/youtube_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "Display")) -> Display_form_submit
write_csv(Display_form_submit, "Display/display_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SEO") | str_detect(Form.Name..ID., "Direct")) -> SEO_Direct_form_submit
write_csv(SEO_Direct_form_submit, "Direct - SEO/seo_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "DSP")) -> DSP_form_submit
write_csv(DSP_form_submit, "DSP/12_18_form_submit.csv")
View(combo_data)
write_csv(DSP_form_submit, "DSP/dsp_submiy.csv")
write_csv(DSP_form_submit, "DM/jan_dm_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "2024jan")) -> jan_dm_form_submit
write_csv(DSP_form_submit, "DM/jan_dm_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "2024jan")) -> jan_dm_form_submit
write_csv(jan_dm_form_submit, "DM/jan_dm_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "DM")) -> dm_form_submit
write_csv(dm_form_submit, "DM/dm_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "DM")) -> dm_form_submit
write_csv(dm_form_submit, "DM/dm_submit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "DM")) -> dm_form_submit
write_csv(dm_form_submit, "DM/dm_submit.csv")
library(readr)
jan_dm_submit <- read_csv("DM/jan_dm_submit.csv")
View(jan_dm_submit)
library(readr)
jan_dm_submit <- read_csv("DM/jan_dm_submit.csv")
View(jan_dm_submit)
library(readr)
dm_submit <- read_csv("DM/dm_submit.csv")
View(dm_submit)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(purrr)
library(dplyr)
folder_path <- '~/Performance Analysis/Form Submission/form submission jan 3/Data'
filenames <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE)
combo_data <- purrr::map_df(filenames,
~read.csv(.x, stringsAsFactors = FALSE) %>% mutate(filename = .x))
combo_data <- combo_data %>%
mutate(filename = as.character(filename)) %>%
mutate(filename = str_remove(filename, "^C:/.*export-")) %>%
rename(phone_number = `手机号码`) %>%
mutate(phone_number = str_replace_all(phone_number, "-", "") %>%
str_replace_all("[^0-9]", ""))
combo_data <- combo_data |>
mutate(Format = if_else(str_detect(Referrer, "floating"), "Floating CTA", "No Floating"))
sms_form <-
combo_data |>
filter(str_detect(filename, 'SMS'))
combo_data |>
filter(str_detect(Form.Name..ID., "DM")) -> dm_form_submit
write_csv(dm_form_submit, "DM/dm_fsubmit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SMS")) -> SMS_form_submit
write_csv(SMS_form_submit, "SMS/sms_fsubmit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SEM")) -> SEM_form_submit
write_csv(SEM_form_submit, "SEM/sem_fsubmit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "YouTube")) -> YouTube_form_submit
write_csv(YouTube_form_submit, "YouTube/youtube_fsubmit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "Display")) -> Display_form_submit
write_csv(Display_form_submit, "Display/display_fsubmit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "SEO") | str_detect(Form.Name..ID., "Direct")) -> SEO_Direct_form_submit
write_csv(SEO_Direct_form_submit, "Direct - SEO/seo_direct_fsubmit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "DSP")) -> DSP_form_submit
write_csv(DSP_form_submit, "DSP/dsp_fsubmit.csv")
combo_data |>
filter(str_detect(Form.Name..ID., "2024jan")) -> jan_form_submit
write_csv(DSP_form_submit, "DM/2024jan_fsubmit.csv")
