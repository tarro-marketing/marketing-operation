library(tidyverse)
library(googlesheets4)
gs4_auth_configure(path = "C:/Users/skt/Documents/PerformanceMarketing/client_secret_1063101091245-a8k1e24l8h2aukvjthrbq0gbneu878su.apps.googleusercontent.com.json")
gs4_auth(email = "youjia.chen@wondersco.com")
inbound_call <- read_sheet(ss = "https://docs.google.com/spreadsheets/d/1WPDjz4PYMIpy278YNE3zScqtFnFdYivP3AXAtEalpnA/edit#gid=671250877", sheet = "Inbound Call Notes - Raw Data (Linked)")
inboundcall_this_week <- inbound_call |>
mutate(Date = as.character(Date)) |>
filter(str_detect(Date, "^[0-9]+$")) |>
mutate(Date = as.numeric(Date),
Date = as.POSIXct(Date, origin = "1970-01-01", tz = "UTC")) |>
filter(Date >= as_date('2024-01-27')& Date <= as_date('2024-02-07'))
write_csv(inboundcall_this_week, "~/PerformanceMarketing/Inbound-Call/jan27_to_feb_7.csv")
write_csv(inboundcall_this_week, "~/PerformanceMarketing/Inbound-Call/2024/1-27-to-2-07/jan27_to_feb_7.csv")
jan27_to_feb_7 <- read_csv("~/PerformanceMarketing/Inbound-Call/jan27_to_feb_7.csv")
View(jan27_to_feb_7)
View(jan27_to_feb_7)
jan27_to_feb_7 |>
select(Phone, `Campaign Sent`) -> inbound_call
library(tidyverse)
sfdc_lead <- read_csv("raw-data/Feb-DM-Performance-Overview-Report.csv")
Brizo <- read_csv("raw-data/Brizo.csv")
group1 <- c("SC", "WI", "MS", "IN", "PA", "KY", "MI", "NJ", "CO", "ID", "NM", "IA", "CA", "MN", "VT", "KS", "NE")
group2 <- c("MD", "DE", "WY", "OH", "NV", "TN", "WV", "AL", "UT", "IL", "MT", "NY", "OK", "NH", "TX", "SD")
group3 <- c("FL", "AR", "RI", "CT", "NC", "DC", "GA", "VA", "MA", "WA", "LA", "MO", "OR", "AZ", "ND", "ME")
Brizo <- Brizo |>
rename(State = `State/Province Code`) |>
mutate( Gift_Group = case_when(
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error"))
date_columns <- names(sfdc_lead)[str_detect(names(sfdc_lead), "Date")]
sfdc_lead_clean <- sfdc_lead |>
mutate(across(all_of(date_columns), mdy)) |>
filter(`Created Date` >= as_date('2024-01-27')&
(str_detect(`Lead Channel`, "DM") | str_detect(`Lead Channel`, "SMS")|
str_detect(`Lead Channel`, "Google") |str_detect(`Lead Channel`, "Email"))&
(!str_detect(`Latest Campaign`,"Jan") | is.na(`Latest Campaign`))) |>
rename(State = `State/Province (text only)`) |>
mutate( gift_group = case_when(
str_detect(`Latest Campaign`,"SQL") ~ "SQL Gift",
str_detect(`Latest Campaign`,"CW") ~ "CW Gift",
str_detect(`Latest Campaign`,"nopromo") ~ "No Promotion",
str_detect(`Latest Campaign`,"SQL") ~ "SQL Gift",
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error")) |>
mutate(mql = case_when(
`Menu Type` != "" &
State != "" &
(`Created By` == "JotForm Integration User" |
`Lead Status` %in% c("Converted", "AE Assigned")) &
!(`Unqualified Reason` %in% c("Current Client","Duplicate","Not a Restaurant")) ~ "TRUE",
TRUE ~ "FALSE"),
cw = case_when(Stage == "Onboarded" ~ "TRUE",TRUE ~ "FALSE"),
sql = case_when(`Opportunity ID`!="" ~ "TRUE", TRUE ~ "FALSE"),
mql = case_when(sql=="TRUE"~"TRUE",TRUE ~ mql)) |>
mutate(`Mobile - Primary` = str_replace_all(
str_replace_all(`Mobile - Primary`, "-", ""), "[^0-9]", ""),
`Business Phone`= str_replace_all(
str_replace_all(`Business Phone`, "-", ""), "[^0-9]", ""),
flow = case_when(`Created By` %in% c("JotForm Integration User", "Carlito Academia") ~ "webflow",
TRUE ~ "inbound call"),
types = case_when(`Created By` == "JotForm Integration User" ~ "jotform",
`Created By` == "Carlito Academia" ~ "qr scan",
TRUE ~ "inbound call")) |>
select(gift_group, `Latest Campaign`, State,mql,sql,cw,flow, types, everything())
jan27_to_feb_7 <- read_csv("~/PerformanceMarketing/Inbound-Call/jan27_to_feb_7.csv")
jan27_to_feb_7 |>
select(Phone, `Campaign Sent`) -> inbound_call
sfdc_lead_clean |>
left_join(inboundcall_select, by = c( `Mobile - Primary`="Phone")) |>
left_join(inboundcall_select, by = c( `Business Phone` = "Phone")) ->test
sfdc_lead_clean |>
left_join(inbound_call, by = c( `Mobile - Primary`="Phone")) |>
left_join(inbound_call, by = c( `Business Phone` = "Phone")) ->test
View(jan27_to_feb_7)
View(inbound_call)
View(jan27_to_feb_7)
library(tidyverse)
library(googlesheets4)
gs4_auth_configure(path = "C:/Users/skt/Documents/PerformanceMarketing/client_secret_1063101091245-a8k1e24l8h2aukvjthrbq0gbneu878su.apps.googleusercontent.com.json")
gs4_auth(email = "youjia.chen@wondersco.com")
inbound_call <- read_sheet(ss = "https://docs.google.com/spreadsheets/d/1WPDjz4PYMIpy278YNE3zScqtFnFdYivP3AXAtEalpnA/edit#gid=671250877", sheet = "Inbound Call Notes - Raw Data (Linked)")
inboundcall_this_week <- inbound_call |>
mutate(Date = as.character(Date)) |>
filter(str_detect(Date, "^[0-9]+$")) |>
mutate(Date = as.numeric(Date),
Date = as.POSIXct(Date, origin = "1970-01-01", tz = "UTC")) |>
filter(Date >= as_date('2024-01-27')& Date <= as_date('2024-02-07'))
View(inbound_call)
View(jan27_to_feb_7)
inboundcall_this_week <- inbound_call |>
mutate(Date = as.character(Date)) |>
filter(str_detect(Date, "^[0-9]+$")) |>
mutate(Date = as.numeric(Date),
Date = as.POSIXct(Date, origin = "1970-01-01", tz = "UTC")) |>
filter(Date >= as_date('2024-01-27')& Date <= as_date('2024-02-07')) |>
filter(Phone!="NULL")
View(inboundcall_this_week)
library(tidyverse)
library(googlesheets4)
gs4_auth_configure(path = "C:/Users/skt/Documents/PerformanceMarketing/client_secret_1063101091245-a8k1e24l8h2aukvjthrbq0gbneu878su.apps.googleusercontent.com.json")
gs4_auth(email = "youjia.chen@wondersco.com")
inbound_call <- read_sheet(ss = "https://docs.google.com/spreadsheets/d/1WPDjz4PYMIpy278YNE3zScqtFnFdYivP3AXAtEalpnA/edit#gid=671250877", sheet = "Inbound Call Notes - Raw Data (Linked)")
inboundcall_this_week <- inbound_call |>
mutate(Date = as.character(Date)) |>
filter(str_detect(Date, "^[0-9]+$")) |>
mutate(Date = as.numeric(Date),
Date = as.POSIXct(Date, origin = "1970-01-01", tz = "UTC")) |>
filter(Date >= as_date('2024-01-27')& Date <= as_date('2024-02-07')) |>
filter(Phone!="NULL")
### Febuary Campaign
inboundcall_this_week <- inboundcall_this_week %>%
mutate(campaign_check = case_when(
Phone == "8885200811" ~ "Mkt_DM_Snowflake_2024FebSQL",
Phone == "8885753251" ~ "Mkt_DM_Snowflake_2024FebCW",
Phone == "8885200559" ~ "Mkt_DM_Snowflake_2024FebNoPromo",
Phone == "8888969083" ~ "Mkt_PaidSearch_Google_BrandCampaigns_FebNopromo",
Phone == "8882186089" ~ "Mkt_PaidSearch_Google_BrandCampaigns_FebSQL",
Phone == "8882187298" ~ "Mkt_PaidSearch_Google_BrandCampaigns_FebCW",
Phone == "8882187445" ~ "Mkt_PaidSearch_Google_GeneralCampaigns_FebOthers",
Phone == "8882183481" ~ "Mkt_SMS_2024FebSQL",
Phone == "8882184964" ~ "Mkt_SMS_2024FebCW",
Phone == "8888968962" ~ "Mkt_SMS_2024FebNoPromo",
Phone == "8882187630" ~ "Mkt_SMS_2024FebSQL_Wonders",
Phone == "8882187646" ~ "Mkt_SMS_2024FebCW_Wonders",
Phone == "8882187649" ~ "Mkt_SMS_2024FebNoPromo_Wonders",
Phone == "8883065813" ~ "Mkt_Email_Personal_2024Feb_case_promo",
Phone == "8882185318" ~ "Mkt_Email_Business_2024Feb_case_promo",
Phone == "8882187512" ~ "Mkt_Email_Personal_2024Feb_promoOnly",
Phone == "8882187606" ~ "Mkt_Email_Business_2024Feb_promoOnly",
Phone == "8889091828" ~ "Mkt_Email_JanBounce_2024Feb_case_promo",
TRUE ~ "No Campaign"
))
View(inboundcall_this_week)
### Febuary Campaign
inboundcall_this_week <- inboundcall_this_week %>%
mutate(Phone = as.character(Phone),
campaign_check = case_when(
Phone == "8885200811" ~ "Mkt_DM_Snowflake_2024FebSQL",
Phone == "8885753251" ~ "Mkt_DM_Snowflake_2024FebCW",
Phone == "8885200559" ~ "Mkt_DM_Snowflake_2024FebNoPromo",
Phone == "8888969083" ~ "Mkt_PaidSearch_Google_BrandCampaigns_FebNopromo",
Phone == "8882186089" ~ "Mkt_PaidSearch_Google_BrandCampaigns_FebSQL",
Phone == "8882187298" ~ "Mkt_PaidSearch_Google_BrandCampaigns_FebCW",
Phone == "8882187445" ~ "Mkt_PaidSearch_Google_GeneralCampaigns_FebOthers",
Phone == "8882183481" ~ "Mkt_SMS_2024FebSQL",
Phone == "8882184964" ~ "Mkt_SMS_2024FebCW",
Phone == "8888968962" ~ "Mkt_SMS_2024FebNoPromo",
Phone == "8882187630" ~ "Mkt_SMS_2024FebSQL_Wonders",
Phone == "8882187646" ~ "Mkt_SMS_2024FebCW_Wonders",
Phone == "8882187649" ~ "Mkt_SMS_2024FebNoPromo_Wonders",
Phone == "8883065813" ~ "Mkt_Email_Personal_2024Feb_case_promo",
Phone == "8882185318" ~ "Mkt_Email_Business_2024Feb_case_promo",
Phone == "8882187512" ~ "Mkt_Email_Personal_2024Feb_promoOnly",
Phone == "8882187606" ~ "Mkt_Email_Business_2024Feb_promoOnly",
Phone == "8889091828" ~ "Mkt_Email_JanBounce_2024Feb_case_promo",
TRUE ~ "No Campaign"
))
View(inboundcall_this_week)
library(tidyverse)
library(googlesheets4)
gs4_auth_configure(path = "C:/Users/skt/Documents/PerformanceMarketing/client_secret_1063101091245-a8k1e24l8h2aukvjthrbq0gbneu878su.apps.googleusercontent.com.json")
gs4_auth(email = "youjia.chen@wondersco.com")
inbound_call <- read_sheet(ss = "https://docs.google.com/spreadsheets/d/1WPDjz4PYMIpy278YNE3zScqtFnFdYivP3AXAtEalpnA/edit#gid=671250877", sheet = "Inbound Call Notes - Raw Data (Linked)")
inboundcall_this_week <- inbound_call |>
mutate(Date = as.character(Date)) |>
filter(str_detect(Date, "^[0-9]+$")) |>
mutate(Date = as.numeric(Date),
Date = as.POSIXct(Date, origin = "1970-01-01", tz = "UTC")) |>
filter(Date >= as_date('2024-01-27')& Date <= as_date('2024-02-07')) |>
filter(Phone!="NULL")
colnames(inboundcall_this_week)
typeof(inboundcall_this_week$`Extension Number`)
inboundcall_this_week <- inboundcall_this_week %>%
mutate(`Extension Number` = as.character(`Extension Number`),
campaign_check = case_when(
`Extension Number` == "8885200811" ~ "Mkt_DM_Snowflake_2024FebSQL",
`Extension Number` == "8885753251" ~ "Mkt_DM_Snowflake_2024FebCW",
`Extension Number` == "8885200559" ~ "Mkt_DM_Snowflake_2024FebNoPromo",
`Extension Number` == "8888969083" ~ "Mkt_PaidSearch_Google_BrandCampaigns_FebNopromo",
`Extension Number` == "8882186089" ~ "Mkt_PaidSearch_Google_BrandCampaigns_FebSQL",
`Extension Number` == "8882187298" ~ "Mkt_PaidSearch_Google_BrandCampaigns_FebCW",
`Extension Number` == "8882187445" ~ "Mkt_PaidSearch_Google_GeneralCampaigns_FebOthers",
`Extension Number` == "8882183481" ~ "Mkt_SMS_2024FebSQL",
`Extension Number` == "8882184964" ~ "Mkt_SMS_2024FebCW",
`Extension Number` == "8888968962" ~ "Mkt_SMS_2024FebNoPromo",
`Extension Number` == "8882187630" ~ "Mkt_SMS_2024FebSQL_Wonders",
`Extension Number` == "8882187646" ~ "Mkt_SMS_2024FebCW_Wonders",
`Extension Number` == "8882187649" ~ "Mkt_SMS_2024FebNoPromo_Wonders",
`Extension Number` == "8883065813" ~ "Mkt_Email_Personal_2024Feb_case_promo",
`Extension Number` == "8882185318" ~ "Mkt_Email_Business_2024Feb_case_promo",
`Extension Number` == "8882187512" ~ "Mkt_Email_Personal_2024Feb_promoOnly",
`Extension Number` == "8882187606" ~ "Mkt_Email_Business_2024Feb_promoOnly",
`Extension Number` == "8889091828" ~ "Mkt_Email_JanBounce_2024Feb_case_promo",
TRUE ~ "No Campaign"
))
View(inboundcall_this_week)
write_csv(inboundcall_this_week, "~/PerformanceMarketing/Inbound-Call/2024/1-27-to-2-07/jan27_to_feb_7.csv")
jan27_to_feb_7 <- read_csv("~/PerformanceMarketing/Inbound-Call/jan27_to_feb_7.csv")
View(jan27_to_feb_7)
write_csv(inboundcall_this_week, "~/PerformanceMarketing/Inbound-Call/2024/1-27-to-2-07/jan27_to_feb_7.csv")
write_csv(inboundcall_this_week, "~/PerformanceMarketing/Inbound-Call/2024/1-27-to-2-07/jan27_to_feb_7.csv")
write_csv(inboundcall_this_week, "~/PerformanceMarketing/Inbound-Call/2024/Febuary/jan27_to_feb_7.csv")
jan27_to_feb_7 <- read_csv("~/PerformanceMarketing/Inbound-Call/jan27_to_feb_7.csv")
jan27_to_feb_7 <- read_csv("~/PerformanceMarketing/Inbound-Call/Febuary/jan27_to_feb_7.csv")
jan27_to_feb_7 <- read_csv("~/PerformanceMarketing/Inbound-Call/2024/Febuary/jan27_to_feb_7.csv")
jan27_to_feb_7 |>
select(Phone, `Campaign Sent`,campaign_check ) -> inbound_call
sfdc_lead_isna <-
sfdc_lead_clean |>
filter(is.na(`Mobile - Primary`))
sfdc_lead_clean |>
left_join(inbound_call, by = c( `Mobile - Primary`="Phone")) |>
left_join(inbound_call, by = c( `Business Phone` = "Phone")) ->test
View(test)
View(sfdc_lead_clean)
sfdc_lead_clean |>
drop_na(`Mobile - Primary`) |>
left_join(inbound_call, by = c( `Mobile - Primary`="Phone")) ->test
View(test)
sfdc_lead_clean |>
drop_na(`Business Phone`) |>
left_join(inbound_call, by = c( `Business Phone`="Phone")) ->test2
View(test2)
library(tidyverse)
sfdc_lead <- read_csv("raw-data/Feb-DM-Performance-Overview-Report.csv")
Brizo <- read_csv("raw-data/Brizo.csv")
group1 <- c("SC", "WI", "MS", "IN", "PA", "KY", "MI", "NJ", "CO", "ID", "NM", "IA", "CA", "MN", "VT", "KS", "NE")
group2 <- c("MD", "DE", "WY", "OH", "NV", "TN", "WV", "AL", "UT", "IL", "MT", "NY", "OK", "NH", "TX", "SD")
group3 <- c("FL", "AR", "RI", "CT", "NC", "DC", "GA", "VA", "MA", "WA", "LA", "MO", "OR", "AZ", "ND", "ME")
Brizo <- Brizo |>
rename(State = `State/Province Code`) |>
mutate( Gift_Group = case_when(
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error"))
date_columns <- names(sfdc_lead)[str_detect(names(sfdc_lead), "Date")]
sfdc_lead_clean <- sfdc_lead |>
mutate(across(all_of(date_columns), mdy)) |>
filter(`Created Date` >= as_date('2024-01-27')&
(str_detect(`Lead Channel`, "DM") | str_detect(`Lead Channel`, "SMS")|
str_detect(`Lead Channel`, "Google") |str_detect(`Lead Channel`, "Email"))&
(!str_detect(`Latest Campaign`,"Jan") | is.na(`Latest Campaign`))) |>
rename(State = `State/Province (text only)`) |>
mutate( gift_group = case_when(
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,regex("CW", ignore_case = TRUE)) ~ "CW Gift",
str_detect(`Latest Campaign`,regex("nopromo", ignore_case = TRUE)) ~ "No Promotion",
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,"Mkt_PaidSearch_Google_AllCampaigns") ~ "Google_AllCampaigns",
str_detect(`Latest Campaign`,regex("WeChat", ignore_case = TRUE)) ~ "WeChat",
str_detect(`Latest Campaign`,regex("SMS_Internal_General", ignore_case = TRUE)) ~ "SMS_Internal",
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error")) |>
mutate(mql = case_when(
`Menu Type` != "" &
State != "" &
(`Created By` == "JotForm Integration User" |
`Lead Status` %in% c("Converted", "AE Assigned")) &
!(`Unqualified Reason` %in% c("Current Client","Duplicate","Not a Restaurant")) ~ "TRUE",
TRUE ~ "FALSE"),
cw = case_when(Stage == "Onboarded" ~ "TRUE",TRUE ~ "FALSE"),
sql = case_when(`Opportunity ID`!="" ~ "TRUE", TRUE ~ "FALSE"),
mql = case_when(sql=="TRUE"~"TRUE",TRUE ~ mql)) |>
mutate(`Mobile - Primary` = str_replace_all(
str_replace_all(`Mobile - Primary`, "-", ""), "[^0-9]", ""),
`Business Phone`= str_replace_all(
str_replace_all(`Business Phone`, "-", ""), "[^0-9]", ""),
flow = case_when(`Created By` %in% c("JotForm Integration User", "Carlito Academia") ~ "webflow",
TRUE ~ "inbound call"),
types = case_when(`Created By` == "JotForm Integration User" ~ "jotform",
`Created By` == "Carlito Academia" ~ "qr scan",
TRUE ~ "inbound call")) |>
select(gift_group, `Latest Campaign`, State,mql,sql,cw,flow, types, everything())
View(sfdc_lead_clean)
sfdc_lead_clean <- sfdc_lead |>
mutate(across(all_of(date_columns), mdy)) |>
filter(`Created Date` >= as_date('2024-01-27')&
(str_detect(`Lead Channel`, "DM") | str_detect(`Lead Channel`, "SMS")|
str_detect(`Lead Channel`, "Google") |str_detect(`Lead Channel`, "Email"))&
(!str_detect(`Latest Campaign`,"Jan") | is.na(`Latest Campaign`))) |>
rename(State = `State/Province (text only)`) |>
mutate( gift_group = case_when(
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,regex("CW", ignore_case = TRUE)) ~ "CW Gift",
str_detect(`Latest Campaign`,regex("nopromo", ignore_case = TRUE)) ~ "No Promotion",
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,"Mkt_PaidSearch_Google_AllCampaigns") ~ "Google_AllCampaigns",
str_detect(`Latest Campaign`,regex("WeChat", ignore_case = TRUE)) ~ "WeChat",
str_detect(`Latest Campaign`,regex("SMS_Internal_General", ignore_case = TRUE)) ~ "SMS_Internal",
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error")) |>
mutate(funnel = case_when(
`Menu Type` != "" &  State != "" & (`Created By` == "JotForm Integration User" |
`Lead Status` %in% c("Converted", "AE Assigned")) &
!(`Unqualified Reason` %in% c("Current Client","Duplicate","Not a Restaurant")) ~ "MQL",
Stage == "Onboarded" ~ "CW",
`Opportunity ID`!="" ~ "TRUE", TRUE ~ "FALSE"))
mutate(`Mobile - Primary` = str_replace_all(
str_replace_all(`Mobile - Primary`, "-", ""), "[^0-9]", ""),
`Business Phone`= str_replace_all(
str_replace_all(`Business Phone`, "-", ""), "[^0-9]", ""),
flow = case_when(`Created By` %in% c("JotForm Integration User", "Carlito Academia") ~ "webflow",
TRUE ~ "inbound call"),
types = case_when(`Created By` == "JotForm Integration User" ~ "jotform",
`Created By` == "Carlito Academia" ~ "qr scan",
TRUE ~ "inbound call")) |>
select(gift_group, `Latest Campaign`, State,mql,sql,cw,flow, types, everything())
library(tidyverse)
sfdc_lead <- read_csv("raw-data/Feb-DM-Performance-Overview-Report.csv")
Brizo <- read_csv("raw-data/Brizo.csv")
group1 <- c("SC", "WI", "MS", "IN", "PA", "KY", "MI", "NJ", "CO", "ID", "NM", "IA", "CA", "MN", "VT", "KS", "NE")
group2 <- c("MD", "DE", "WY", "OH", "NV", "TN", "WV", "AL", "UT", "IL", "MT", "NY", "OK", "NH", "TX", "SD")
group3 <- c("FL", "AR", "RI", "CT", "NC", "DC", "GA", "VA", "MA", "WA", "LA", "MO", "OR", "AZ", "ND", "ME")
Brizo <- Brizo |>
rename(State = `State/Province Code`) |>
mutate( Gift_Group = case_when(
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error"))
date_columns <- names(sfdc_lead)[str_detect(names(sfdc_lead), "Date")]
sfdc_lead_clean <- sfdc_lead |>
mutate(across(all_of(date_columns), mdy)) |>
filter(`Created Date` >= as_date('2024-01-27')&
(str_detect(`Lead Channel`, "DM") | str_detect(`Lead Channel`, "SMS")|
str_detect(`Lead Channel`, "Google") |str_detect(`Lead Channel`, "Email"))&
(!str_detect(`Latest Campaign`,"Jan") | is.na(`Latest Campaign`))) |>
rename(State = `State/Province (text only)`) |>
mutate( gift_group = case_when(
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,regex("CW", ignore_case = TRUE)) ~ "CW Gift",
str_detect(`Latest Campaign`,regex("nopromo", ignore_case = TRUE)) ~ "No Promotion",
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,"Mkt_PaidSearch_Google_AllCampaigns") ~ "Google_AllCampaigns",
str_detect(`Latest Campaign`,regex("WeChat", ignore_case = TRUE)) ~ "WeChat",
str_detect(`Latest Campaign`,regex("SMS_Internal_General", ignore_case = TRUE)) ~ "SMS_Internal",
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error")) |>
mutate(funnel = case_when(
`Menu Type` != "" &  State != "" & (`Created By` == "JotForm Integration User" |
`Lead Status` %in% c("Converted", "AE Assigned")) &
!(`Unqualified Reason` %in% c("Current Client","Duplicate","Not a Restaurant")) ~ "MQL",
Stage == "Onboarded" ~ "CW",
`Opportunity ID`!="" ~ "TRUE", TRUE ~ "FALSE"))
mutate(`Mobile - Primary` = str_replace_all(
str_replace_all(`Mobile - Primary`, "-", ""), "[^0-9]", ""),
`Business Phone`= str_replace_all(
str_replace_all(`Business Phone`, "-", ""), "[^0-9]", ""),
flow = case_when(`Created By` %in% c("JotForm Integration User", "Carlito Academia") ~ "webflow",
TRUE ~ "inbound call"),
types = case_when(`Created By` == "JotForm Integration User" ~ "jotform",
`Created By` == "Carlito Academia" ~ "qr scan",
TRUE ~ "inbound call")) |>
select(gift_group, `Latest Campaign`, State,mql,sql,cw,flow, types, everything())
View(sfdc_lead_clean)
sfdc_lead_clean <- sfdc_lead |>
mutate(across(all_of(date_columns), mdy)) |>
filter(`Created Date` >= as_date('2024-01-27')&
(str_detect(`Lead Channel`, "DM") | str_detect(`Lead Channel`, "SMS")|
str_detect(`Lead Channel`, "Google") |str_detect(`Lead Channel`, "Email"))&
(!str_detect(`Latest Campaign`,"Jan") | is.na(`Latest Campaign`))) |>
rename(State = `State/Province (text only)`) |>
mutate( gift_group = case_when(
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,regex("CW", ignore_case = TRUE)) ~ "CW Gift",
str_detect(`Latest Campaign`,regex("nopromo", ignore_case = TRUE)) ~ "No Promotion",
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,"Mkt_PaidSearch_Google_AllCampaigns") ~ "Google_AllCampaigns",
str_detect(`Latest Campaign`,regex("WeChat", ignore_case = TRUE)) ~ "WeChat",
str_detect(`Latest Campaign`,regex("SMS_Internal_General", ignore_case = TRUE)) ~ "SMS_Internal",
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error")) |>
mutate(funnel = case_when(
`Menu Type` != "" &  State != "" & (`Created By` == "JotForm Integration User" |
`Lead Status` %in% c("Converted", "AE Assigned")) &
!(`Unqualified Reason` %in% c("Current Client","Duplicate","Not a Restaurant")) ~ "MQL",
Stage == "Onboarded" ~ "CW",
`Opportunity ID`!="" ~ "TRUE", TRUE ~ "FALSE")) |>
mutate(`Mobile - Primary` = str_replace_all(
str_replace_all(`Mobile - Primary`, "-", ""), "[^0-9]", ""),
`Business Phone`= str_replace_all(
str_replace_all(`Business Phone`, "-", ""), "[^0-9]", ""),
flow = case_when(`Created By` %in% c("JotForm Integration User", "Carlito Academia") ~ "webflow",
TRUE ~ "inbound call"),
types = case_when(`Created By` == "JotForm Integration User" ~ "jotform",
`Created By` == "Carlito Academia" ~ "qr scan",
TRUE ~ "inbound call")) |>
select(gift_group, `Latest Campaign`, State,mql,sql,cw,flow, types, everything())
sfdc_lead_clean <- sfdc_lead |>
mutate(across(all_of(date_columns), mdy)) |>
filter(`Created Date` >= as_date('2024-01-27')&
(str_detect(`Lead Channel`, "DM") | str_detect(`Lead Channel`, "SMS")|
str_detect(`Lead Channel`, "Google") |str_detect(`Lead Channel`, "Email"))&
(!str_detect(`Latest Campaign`,"Jan") | is.na(`Latest Campaign`))) |>
rename(State = `State/Province (text only)`) |>
mutate( gift_group = case_when(
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,regex("CW", ignore_case = TRUE)) ~ "CW Gift",
str_detect(`Latest Campaign`,regex("nopromo", ignore_case = TRUE)) ~ "No Promotion",
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,"Mkt_PaidSearch_Google_AllCampaigns") ~ "Google_AllCampaigns",
str_detect(`Latest Campaign`,regex("WeChat", ignore_case = TRUE)) ~ "WeChat",
str_detect(`Latest Campaign`,regex("SMS_Internal_General", ignore_case = TRUE)) ~ "SMS_Internal",
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error")) |>
mutate(funnel = case_when(
`Menu Type` != "" &  State != "" & (`Created By` == "JotForm Integration User" |
`Lead Status` %in% c("Converted", "AE Assigned")) &
!(`Unqualified Reason` %in% c("Current Client","Duplicate","Not a Restaurant")) ~ "MQL",
Stage == "Onboarded" ~ "CW",
`Opportunity ID`!="" ~ "TRUE", TRUE ~ "FALSE")) |>
mutate(`Mobile - Primary` = str_replace_all(
str_replace_all(`Mobile - Primary`, "-", ""), "[^0-9]", ""),
`Business Phone`= str_replace_all(
str_replace_all(`Business Phone`, "-", ""), "[^0-9]", ""),
flow = case_when(`Created By` %in% c("JotForm Integration User", "Carlito Academia") ~ "webflow",
TRUE ~ "inbound call"),
types = case_when(`Created By` == "JotForm Integration User" ~ "jotform",
`Created By` == "Carlito Academia" ~ "qr scan",
TRUE ~ "inbound call")) |>
select(gift_group, `Latest Campaign`, State,funnel,flow, types, everything())
View(sfdc_lead_clean)
sfdc_lead_clean <- sfdc_lead |>
mutate(across(all_of(date_columns), mdy)) |>
filter(`Created Date` >= as_date('2024-01-27')&
(str_detect(`Lead Channel`, "DM") | str_detect(`Lead Channel`, "SMS")|
str_detect(`Lead Channel`, "Google") |str_detect(`Lead Channel`, "Email"))&
(!str_detect(`Latest Campaign`,"Jan") | is.na(`Latest Campaign`))) |>
rename(State = `State/Province (text only)`) |>
mutate( gift_group = case_when(
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,regex("CW", ignore_case = TRUE)) ~ "CW Gift",
str_detect(`Latest Campaign`,regex("nopromo", ignore_case = TRUE)) ~ "No Promotion",
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,"Mkt_PaidSearch_Google_AllCampaigns") ~ "Google_AllCampaigns",
str_detect(`Latest Campaign`,regex("WeChat", ignore_case = TRUE)) ~ "WeChat",
str_detect(`Latest Campaign`,regex("SMS_Internal_General", ignore_case = TRUE)) ~ "SMS_Internal",
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error")) |>
mutate(funnel = case_when(
`Menu Type` != "" &  State != "" & (`Created By` == "JotForm Integration User" |
`Lead Status` %in% c("Converted", "AE Assigned")) &
!(`Unqualified Reason` %in% c("Current Client","Duplicate","Not a Restaurant")) ~ "MQL",
Stage == "Onboarded" ~ "CW",
`Opportunity ID`!="" ~ "TRUE", TRUE ~ "MEL")) |>
mutate(`Mobile - Primary` = str_replace_all(
str_replace_all(`Mobile - Primary`, "-", ""), "[^0-9]", ""),
`Business Phone`= str_replace_all(
str_replace_all(`Business Phone`, "-", ""), "[^0-9]", ""),
flow = case_when(`Created By` %in% c("JotForm Integration User", "Carlito Academia") ~ "webflow",
TRUE ~ "inbound call"),
types = case_when(`Created By` == "JotForm Integration User" ~ "jotform",
`Created By` == "Carlito Academia" ~ "qr scan",
TRUE ~ "inbound call")) |>
select(gift_group, `Latest Campaign`, State,funnel,flow, types, everything())
View(sfdc_lead_clean)
sfdc_lead_clean <- sfdc_lead |>
mutate(across(all_of(date_columns), mdy)) |>
filter(`Created Date` >= as_date('2024-01-27')&
(str_detect(`Lead Channel`, "DM") | str_detect(`Lead Channel`, "SMS")|
str_detect(`Lead Channel`, "Google") |str_detect(`Lead Channel`, "Email"))&
(!str_detect(`Latest Campaign`,"Jan") | is.na(`Latest Campaign`))) |>
rename(State = `State/Province (text only)`) |>
mutate( gift_group = case_when(
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,regex("CW", ignore_case = TRUE)) ~ "CW Gift",
str_detect(`Latest Campaign`,regex("nopromo", ignore_case = TRUE)) ~ "No Promotion",
str_detect(`Latest Campaign`,regex("SQL", ignore_case = TRUE)) ~ "SQL Gift",
str_detect(`Latest Campaign`,"Mkt_PaidSearch_Google_AllCampaigns") ~ "Google_AllCampaigns",
str_detect(`Latest Campaign`,regex("WeChat", ignore_case = TRUE)) ~ "WeChat",
str_detect(`Latest Campaign`,regex("SMS_Internal_General", ignore_case = TRUE)) ~ "SMS_Internal",
State %in% group1 ~ "SQL Gift",
State %in% group2 ~ "CW Gift",
State %in% group3 ~ "No Promotion",
TRUE ~ "Error")) |>
mutate(funnel = case_when(
Stage == "Onboarded" ~ "CW",
`Opportunity ID`!="" ~ "SQL",
`Menu Type` != "" &  State != "" & (`Created By` == "JotForm Integration User" |
`Lead Status` %in% c("Converted", "AE Assigned")) &
!(`Unqualified Reason` %in% c("Current Client","Duplicate","Not a Restaurant")) ~ "MQL",
TRUE ~ "MEL")) |>
mutate(`Mobile - Primary` = str_replace_all(
str_replace_all(`Mobile - Primary`, "-", ""), "[^0-9]", ""),
`Business Phone`= str_replace_all(
str_replace_all(`Business Phone`, "-", ""), "[^0-9]", ""),
flow = case_when(`Created By` %in% c("JotForm Integration User", "Carlito Academia") ~ "webflow",
TRUE ~ "inbound call"),
types = case_when(`Created By` == "JotForm Integration User" ~ "jotform",
`Created By` == "Carlito Academia" ~ "qr scan",
TRUE ~ "inbound call")) |>
select(gift_group, `Latest Campaign`, State,funnel,flow, types, everything())
View(sfdc_lead_clean)
write_csv(sfdc_lead_clean,"temp/sfdc_clean.csv")
write_csv(sfdc_lead_clean,"temp/sfdc_clean.csv", na = "")
