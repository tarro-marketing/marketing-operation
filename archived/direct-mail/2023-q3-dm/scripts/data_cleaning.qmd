---
title: "data_cleaning"
format: html
editor: visual
---

## loading package

```{r}
library(tidyverse)
library(data.table)
```

```{r}
folder_path <- "~/Desktop/Wonders/dm_analysis/filled_info"

filenames <- gsub("\\.csv$", "", list.files(path = folder_path, pattern = "\\.csv$"))

for (i in filenames) {
  assign(i, read.csv(file.path(folder_path, paste(i, ".csv", sep = ""))))
}
```

## Apple/ New Restaurants

```{r}
folder_path <- "~/Desktop/Wonders/dm_analysis/audiences_info/1.June_July"

filenames <- gsub("\\.csv$", "", list.files(path = folder_path, pattern = "\\.csv$"))

for (i in filenames) {
  assign(i, read.csv(file.path(folder_path, paste(i, ".csv", sep = ""))))
}


```

### apple - campaign audiences info

```{r}

apple <- read_csv("campaign/apple.csv")

visit_apple = apple |> 
  mutate(InfoSource = ifelse(Snowball_ID <= 31635, "google",
                 ifelse(Snowball_ID >= 31636 & Snowball_ID <= 67984, "greendot",
                 ifelse(Snowball_ID >= 67985 & Snowball_ID <= 75156, "canada", "existing_clients"))))


apple_pivot2 <- pivot_wider(
  visit_apple,
  names_from = `Event name`,
  values_from = Sessions,
  values_fn = list) |> 
  unnest(everything(), names_sep = '_') |> 
  mutate(across(starts_with("list"), ~as.integer(.)))

apple_pivot2[is.na(apple_pivot2)] <- 0

apple_pivot2 = apple_pivot2 |> 
  group_by(Snowball_ID, Date, InfoSource) %>%
  summarize(across(page_view:click, ~ round(sum(., na.rm = TRUE))),.groups = 'drop')

Apple_GreendotYelp$Employee_Size = as.character(Apple_GreendotYelp$Employee_Size)
Apple_GreendotYelp$Sales_Volume = as.character(Apple_GreendotYelp$Sales_Volume)
Apple_ExistingLeads$Zip_Code = as.character(Apple_ExistingLeads$Zip_Code )

df1 <- bind_rows(Apple_GreendotYelp, Apple_Google_NEW)|> 
    arrange(Snowball_ID)

df2 <- bind_rows(df1, Apple_ExistingLeads)|> 
    arrange(Snowball_ID)

df2 = df2 |> 
  mutate(Country = "USA") 

df3 <- bind_rows(df2, Apple_Canada) |> 
    arrange(Snowball_ID)


final_apple <- df3 %>%
  mutate_at(vars(-Snowball_ID, -Year_Established), ~na_if(., "")) |> 
  arrange(Snowball_ID)

combined_apple = apple_pivot2 |> 
  left_join(final_apple, by= "Snowball_ID")

Iphone_DM_Form <- read_csv("filled_info/Iphone_DM_Form.csv")
Iphone_DM_Form |> 
  mutate(Referrer = str_extract(Referrer, "(?<=utm_id=)\\d+"))-> Iphone_DM_Form

apple_campaign = combined_apple %>%
  mutate(fill_info = ifelse(Snowball_ID %in% Iphone_DM_Form$Referrer, "Yes", "No"),
         Snowball_ID = as.character(Snowball_ID)) |> 
  select(-Date)

write_csv(apple_campaign, "final_data/apple_campaign.csv")

```

### new restaurants - campaign audiences info

```{r}
NewRestaurants <- read_csv("campaign/NewRestaurants.csv")

visit_google_nr = NewRestaurants |> 
  mutate(InfoSource = ifelse(Snowball_ID <= 31635, "google",
                 ifelse(Snowball_ID >= 31636 & Snowball_ID <= 67984, "greendot",
                 ifelse(Snowball_ID >= 67985 & Snowball_ID <= 75156, "canada", "existing_clients"))))


new_restaurants_pivot2 <- pivot_wider(
  visit_google_nr,
  names_from = `Event name`,
  values_from = Sessions,
  values_fn = list) |> 
  unnest(everything(), names_sep = '_') |> 
  mutate(across(starts_with("list"), ~as.integer(.)))

new_restaurants_pivot2[is.na(new_restaurants_pivot2)] <- 0

new_restaurants_pivot2 = new_restaurants_pivot2 |> 
  group_by(Snowball_ID, Date, InfoSource) %>%
  summarize(across(page_view:video_complete, ~ round(mean(., na.rm = TRUE))),.groups = 'drop')

combined_new_restaurants = new_restaurants_pivot2 |> 
  left_join(final_apple, by= "Snowball_ID")

new_restaurants_campaign = combined_new_restaurants %>%
  mutate(fill_info = ifelse(Snowball_ID %in% Iphone_DM_Form$Referrer, "Yes", "No"),
         Snowball_ID = as.character(Snowball_ID)) |> 
  select(-Date)

write_csv(new_restaurants_campaign, "final_data/new_restaurants_campaign.csv")

```

## summer special / free trail

### load audience info

```{r}

folder_path <- "~/Desktop/Wonders/dm_analysis/audiences_info/2.July_August"

filenames <- gsub("\\.csv$", "", list.files(path = folder_path, pattern = "\\.csv$"))

for (i in filenames) {
  assign(i, read.csv(file.path(folder_path, paste(i, ".csv", sep = ""))))
}

July_August_Brizo_CAN |> 
  mutate(location = "Canada",
         Snowball.Map = as.character(Snowball.Map)) -> July_August_Brizo_CAN
July_August_Brizo_US |> 
  mutate(location = "US",
         Zip.Postal.Code = as.character(Zip.Postal.Code)) -> July_August_Brizo_US

July_August_Brizo_No_Activity_Lead |> 
  mutate(location = "US",
         Zip.Postal.Code = as.character(Zip.Postal.Code),
         Snowball.Map = as.character(Snowball.Map),
         Map.Correction = as.character(Map.Correction)) -> July_August_Brizo_noactive

July_August_Brizo = bind_rows(July_August_Brizo_CAN, July_August_Brizo_US)

July_August_Brizo2 = bind_rows(July_August_Brizo, July_August_Brizo_noactive) |> 
  arrange(Snowball.Map)

# write_csv(July_August_Brizo2, "audiences_info/2.July_August/brizo_list.csv")

July_August_Brizo2 = July_August_Brizo2 |> 
  mutate(Mapping.Correction = as.character(Mapping.Correction))

```

### summer special cleaning

```{r}
folder_path <- "~/Desktop/Wonders/dm_analysis/audiences_info/2.July_August"

filenames <- gsub("\\.csv$", "", list.files(path = folder_path, pattern = "\\.csv$"))

for (i in filenames) {
  assign(i, read.csv(file.path(folder_path, paste(i, ".csv", sep = ""))))
}

July_August_Brizo_CAN |> 
  mutate(location = "Canada",
         Snowball.Map = as.character(Snowball.Map)) -> July_August_Brizo_CAN
July_August_Brizo_US |> 
  mutate(location = "US",
         Zip.Postal.Code = as.character(Zip.Postal.Code)) -> July_August_Brizo_US

July_August_Brizo_No_Activity_Lead |> 
  mutate(location = "US",
         Zip.Postal.Code = as.character(Zip.Postal.Code),
         Snowball.Map = as.character(Snowball.Map),
         Map.Correction = as.character(Map.Correction)) -> July_August_Brizo_noactive

July_August_Brizo = bind_rows(July_August_Brizo_CAN, July_August_Brizo_US)

July_August_Brizo2 = bind_rows(July_August_Brizo, July_August_Brizo_noactive)

####
summerspecial_campaign <- read_csv("campaign/summerspecial_campaign.csv")
Summer_Special_DM <- read_csv("filled_info/Summer_Special_DM.csv")
Summer_special_DM2 <- read_csv("filled_info/Summer_special_DM2.csv")


summerspecial_campaign = summerspecial_campaign |> 
  mutate(Snowball_ID = str_extract(`Page location`, "(?<=utm_id=)\\d+")) |> 
  select(Snowball_ID, Sessions,`Event name`, -`Page location`, -Date)



# write_csv(summerspecial_campaign,"campaign/summerspecial_campaign2.csv")


result <- summerspecial_campaign %>%
  group_by(Snowball_ID, `Event name`) %>%
  summarize(Sessions = sum(Sessions))

summerspecial_campaign_pivot2 <- pivot_wider(
  result,
  names_from = `Event name`,
  values_from = Sessions,
  values_fn = list) |> 
  unnest(everything(), names_sep = '_') |> 
  mutate(across(starts_with("list"), ~as.integer(.)))

summerspecial_campaign_pivot22 = summerspecial_campaign_pivot2 |> 
  group_by(Snowball_ID) %>%
  summarize(across(page_view:first_visit, ~ round(sum(., na.rm = TRUE))),.groups = 'drop')


summer_campaign_cleaning = 
  summerspecial_campaign_pivot22 |> 
  mutate(InfoSource = ifelse(Snowball_ID <= 62133, "brizo",
                 ifelse(Snowball_ID >= 62134, "no_active", NA)))

summer_campaign_cleaning[is.na(summer_campaign_cleaning)] <- 0

combined_summer_campaign = summer_campaign_cleaning |> 
  left_join(July_August_Brizo2, by= join_by(Snowball_ID == Snowball.Map))

Summer_special_DM_cam = Summer_Special_DM |> 
  mutate(Snowball_ID = str_extract(Referrer, "(?<=utm_id=)\\d+")) |> 
    select(Snowball_ID, everything(), -Referrer)
Summer_special_DM2_cam = Summer_special_DM2 |> 
  mutate(Snowball_ID = str_extract(Referrer, "(?<=utm_id=)\\d+")) |> 
      select(Snowball_ID, everything(), -Referrer)

summer_special_DM_bined = bind_rows(Summer_special_DM_cam, Summer_special_DM2_cam)


summer_campaign = combined_summer_campaign %>%
  mutate(fill_info = ifelse(Snowball_ID %in% summer_special_DM_bined$Snowball_ID, "Yes", "No"),
         Snowball_ID = as.character(Snowball_ID))

write_csv(summer_campaign, "final_data/summer_campaign.csv")
```

### free trail - join visit with audience info

```{r}
July_August_Brizo2 |> 
  filter(Snowball.Map == 368)
```

```{r}
Free_Trial_Campaign_2 <- read_csv("campaign/Free_Trial_Campaign2.csv")
Free_Trial_Campaign333 = Free_Trial_Campaign_2 |> 
  mutate(Snowball_ID = str_extract(`Page location`, "(?<=utm_id=)\\d+")) |> 
    select(Snowball_ID, everything(), -`Page location`)

Free_Trial_Campaign_pivot2 <- pivot_wider(
  Free_Trial_Campaign333,
  names_from = `Event name`,
  values_from = Sessions,
  values_fn = list) |> 
  unnest(everything(), names_sep = '_') |> 
  mutate(across(starts_with("list"), ~as.integer(.)))

Free_Trial_Campaign_pivot22 = Free_Trial_Campaign_pivot2 |> 
  group_by(Snowball_ID) %>%
  summarize(across(page_view:click, ~ round(sum(., na.rm = TRUE))),.groups = 'drop')

combined_Free_Trial_campaign = Free_Trial_Campaign_pivot22 |> 
  mutate(Snowball_ID = as.character(Snowball_ID)) |> 
  left_join(July_August_Brizo2, by= join_by(Snowball_ID == Mapping.Correction))

combined_Free_Trial_campaign22 = Free_Trial_Campaign_pivot22 |> 
  mutate(Snowball_ID = as.character(Snowball_ID)) |> 
  left_join(July_August_Brizo2, by= join_by(Snowball_ID == Snowball.Map))


#####

Free_Trial_DM_Mobile_cam = Free_Trial_DM_Mobile |> 
  mutate(Snowball_ID = str_extract(Referrer, "(?<=utm_id=)\\d+")) |> 
  select(Snowball_ID, everything(), -Referrer)


Free_Trial__campaign = combined_Free_Trial_campaign %>%
  mutate(fill_info = ifelse(Snowball_ID %in% Free_Trial_DM_Mobile_cam$Snowball_ID, "Yes", "No"),
         Snowball_ID = as.character(Snowball_ID))

write_csv(Free_Trial__campaign, "final_data/Free_Trial_campaign.csv")

```

## mooncake

```{r}
folder_path <- "~/Desktop/Wonders/dm_analysis/audiences_info/3.August_September"

filenames <- gsub("\\.csv$", "", list.files(path = folder_path, pattern = "\\.csv$"))

for (i in filenames) {
  assign(i, read.csv(file.path(folder_path, paste(i, ".csv", sep = ""))))
}

August_September_CAN_A <- August_September_CAN_A |> mutate(group = "Offer_A")
August_September_CAN_B <- August_September_CAN_B|> mutate(group = "Offer_B")
august_september_canada = 
  bind_rows(August_September_CAN_A, August_September_CAN_B) |>
  mutate(location = "Canada")

August_September_US_A <- August_September_US_A |> mutate(group = "Offer_A")
August_September_US_B <- August_September_US_B|> mutate(group = "Offer_B")
august_september_us = bind_rows(August_September_US_A, August_September_US_B) |> 
  mutate(location = "US",
         Zip.Postal.Code = as.character(Zip.Postal.Code))

august_september_all = bind_rows(august_september_us, august_september_canada) |> 
  mutate(Snowball.Map = as.character(Snowball.Map))

Mooncake <- read_csv("campaign/Mooncake.csv")

result <- Mooncake %>%
  group_by(Snowball_ID, Date, `Event name`) %>%
  summarize(Sessions = sum(Sessions))

mooncake_pivot2 <- pivot_wider(
  result,
  names_from = `Event name`,
  values_from = Sessions,
  values_fn = list) |>  
  unnest(everything(), names_sep = '_')  |> 
  mutate(across(starts_with("list"), ~as.integer(.)))

mooncake_pivot4 <- mooncake_pivot2 %>%
  mutate_if(is.numeric, ~ifelse(is.na(.), 0, .))

mooncake_pivot2_SUM = mooncake_pivot2 |> 
  select(-Date) |> 
  group_by(Snowball_ID) %>%
  summarize(across(page_view:click, ~ round(sum(., na.rm = TRUE))),.groups = 'drop')


combined_mooncake = mooncake_pivot2_SUM |> 
  mutate(Snowball_ID = as.character(Snowball_ID)) |> 
  left_join(august_september_all, by = join_by(Snowball_ID == Snowball.Map))

Mooncake_Form_AA <- Mooncake_Form_A |> 
  mutate(group = "Offer_A", utm_id = as.character(utm_id),
         MobilePhone = as.character(MobilePhone))
Mooncake_Form_BB <- Mooncake_Form_B|> 
  mutate(group = "Offer_B",
         utm_id = as.character(utm_id))
MooncakeFormAA <- MooncakeFormA |> 
  mutate(group = "Offer_A",
         utm_id = as.character(utm_id))

Mooncake_all = 
  bind_rows(Mooncake_Form_AA, Mooncake_Form_BB) |>
  bind_rows(MooncakeFormAA) |> 
  mutate(Snowball_ID = str_extract(Referrer, "(?<=utm_id=)\\d+")) |> 
  select(Snowball_ID, everything(),-Referrer)

mooncake_campaign = combined_mooncake %>%
  mutate(fill_info = ifelse(Snowball_ID %in% Mooncake_all$Snowball_ID, "Yes", "No"),
         Snowball_ID = as.character(Snowball_ID))

write_csv(mooncake_campaign, "final_data/mooncake_campaign.csv")

```

```{r}

folder_path <- "~/Desktop/Wonders/dm_analysis/final_data"

filenames <- gsub("\\.csv$", "", list.files(path = folder_path, pattern = "\\.csv$"))

for (i in filenames) {
  assign(i, read.csv(file.path(folder_path, paste(i, ".csv", sep = ""))))
}

```

```{r}

apple_campaign_model = apple_campaign |> 
  mutate(fill_info = recode(fill_info,
                            "No" = "Didn't Fill",
                            "Yes" = "Filled"),
         Campaign = "Apple") |> 
  select(fill_info, State, Contact_Title, Year_Established, Employee_Size, Category, Country, InfoSource, Campaign)


new_re_model = new_restaurants_campaign |> 
  drop_na(Name) |> 
  mutate(Employee_Size = as.integer(Employee_Size),
         fill_info = recode(fill_info,
                            "No" = "Didn't Fill",
                            "Yes" = "Filled"),
         Campaign = "New Restaurant") |> 
  select(fill_info, State, Contact_Title, Year_Established, Employee_Size, Category, Country, InfoSource, Campaign)


summer_campaign_model = summer_campaign |> 
  drop_na(Name) |> 
  mutate(InfoSource = "Brizo",
         fill_info = recode(fill_info,
                            "No" = "Didn't Fill",
                            "Yes" = "Filled"),
           Campaign = "Summer") |> 
  rename( "State" = "State.Province.Code", 
          "Contact_Title" = "Role",
          "Year_Established" = "Established", 
          "Employee_Size" = "Estimated.Employees",
          "Category" = "Cuisines..Regional.") |> 
  select(fill_info, State, Contact_Title, Year_Established, Employee_Size, Category, Country, InfoSource, Campaign)
  


Free_Trial_campaign_model = Free_Trial_campaign |> 
  drop_na(Name) |> 
  mutate(InfoSource = "Brizo",
         fill_info = recode(fill_info,
                            "No" = "Didn't Fill",
                            "Yes" = "Filled"),
           Campaign = "Free Trail") |> 
  rename( "State" = "State.Province.Code", 
          "Contact_Title" = "Role",
          "Year_Established" = "Established", 
          "Employee_Size" = "Estimated.Employees",
          "Category" = "Cuisines..Regional.") |> 
  select(fill_info, State, Contact_Title, Year_Established, Employee_Size, Category, Country, InfoSource, Campaign)
  



mooncake_campaign_model = mooncake_campaign |> 
  drop_na(Name) |> 
  mutate(InfoSource = "Brizo",
         fill_info = recode(fill_info,
                            "No" = "Didn't Fill",
                            "Yes" = "Filled"),
           Campaign = "Mooncake") |> 
  rename( "State" = "State.Province.Code", 
          "Contact_Title" = "Role",
          "Year_Established" = "Established", 
          "Employee_Size" = "Estimated.Employees",
          "Category" = "Cuisines..Regional.") |> 
  select(fill_info, State, Contact_Title, Year_Established, Employee_Size, Category, Country, InfoSource, Campaign)


final_total = apple_campaign_model |> 
  bind_rows(new_re_model) |> 
  bind_rows(summer_campaign_model) |> 
  bind_rows(Free_Trial_campaign_model) |> 
  bind_rows(mooncake_campaign_model)

final_total$New_Category <- ifelse(grepl(";", final_total$Category), "Asian Fusion", final_total$Category)
final_total$New_Category <- ifelse(is.na(final_total$New_Category), "Unknown", final_total$New_Category)
final_total$State <- ifelse(is.na(final_total$State), "Unknown", final_total$State)


map_dbl(final_total, ~ sum(is.na(.)))


test = final_total|> 
  select(-Category)  |> 
  mutate(fill_info_num = ifelse(fill_info == "Filled", 1, 0)) 

write_csv(test, "final_data/test.csv")


test = as.data.frame(test)


```

```{r}
model <- glm(fill_info_num ~ State, data = test, family = binomial(logit))
summary(model) 

model <- glm(fill_info_num ~ Year_Established, data = test, family = binomial(logit))
summary(model) 
model <- glm(fill_info_num ~ Employee_Size, data = test, family = binomial(logit))
summary(model) 
model <- glm(fill_info_num ~ Country, data = test, family = binomial(logit))
summary(model) 
model <- glm(fill_info_num ~ New_Category, data = test, family = binomial(logit))
summary(model) 


model <- glm(fill_info_num ~ factor(Contact_Title), data = test, family = binomial(logit))
summary(model) 


```

```{r}

library(broom)

model <- glm(fill_info_num ~ State + Year_Established + Employee_Size, data = test, family = binomial(logit))
summary(model) 

tidy(model)
glance(model)

model <- glm(fill_info_num ~ State, data = test, family = binomial(logit))
summary(model) 
model <- glm(fill_info_num ~ Year_Established, data = test, family = binomial(logit))
summary(model) 
model <- glm(fill_info_num ~ Employee_Size, data = test, family = binomial(logit))
summary(model) 
model <- glm(fill_info_num ~ Country, data = test, family = binomial(logit))
summary(model) 
model <- glm(fill_info_num ~ New_Category, data = test, family = binomial(logit))
summary(model) 

```

```{r}
library(car)
vif(model)
```
