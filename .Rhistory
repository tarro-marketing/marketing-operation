
(is.na(lead_unqualified_reason) |
(tolower(lead_unqualified_reason) != "current client" &
tolower(lead_unqualified_reason) != "duplicate")), TRUE, FALSE),
# create the 'mql' column, treating nas in unqualified_reason as valid
mql = if_else(!is.na(lead_latest_mql_time_stamp) &
(is.na(lead_unqualified_reason) |
!tolower(lead_unqualified_reason) %in% c("current client", "duplicate", "not a restaurant", "incorrect phone number")), TRUE, FALSE),
# create the 'sql' column, treating nas as false
sql = if_else(!is.na(lead_converted_account_account_id), TRUE, FALSE),
# create the 'onboarded' column, treating nas as false
onboarded = if_else(!is.na(lead_converted_opportunity_stage) & lead_converted_opportunity_stage == "Onboarded", TRUE, FALSE)
) %>%
mutate(
# ensuring the logical flow for the funnel stages
sql = if_else(onboarded, TRUE, sql),       # if onboarded is true, sql should be true
mql = if_else(sql, TRUE, mql),             # if sql is true, mql should be true
mel = if_else(mql, TRUE, mel)              # if mql is true, mel should be true
)
summary_data <- campaign_member_data_c %>%
group_by(month, campaign_period) %>%
summarize(
mel_count = sum(mel, na.rm = TRUE),
mql_count = sum(mql, na.rm = TRUE),
sql_count = sum(sql, na.rm = TRUE),
onboarded_count = sum(onboarded, na.rm = TRUE)
) %>%
mutate(
numeric_month = match(tolower(month), tolower(month.name)),
year = if_else(numeric_month >= 10, 2023, 2024)
) %>%
ungroup() |>
select(numeric_month, year, everything())
write_sheet(summary_data,ss="18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",sheet="SFDC Leads + Campaigns")
campaign_member_data_c %>%
group_by(month) %>%
group_walk(~ write.csv(.x, paste0("campaign_members_", .y$month, ".csv"), row.names = FALSE))
campaign_member_data_c %>%
group_by(month) %>%
group_walk(~ write_sheet(.x,
ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
sheet = paste0("campaign_members_", .y$month)))
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
library(here)
setwd(here("direct-mail", "campaign-member"))
client_secret_path <- keyring::key_get(
service = "googlesheets4",
username = "client_secret_path"
)
email <- keyring::key_get(service = "googlesheets4", username = "email")
# configure and authenticate using retrieved credentials
gs4_auth_configure(path = client_secret_path)
gs4_auth(email = email, cache = TRUE)
################### loading data ###########################
campaign_members <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] mkt campaign report",
range = "A2:AK"
)
campaign_members <- campaign_members |> clean_names()
campaign_members |>
filter(str_detect(lead_channel,"DM"))
campaign_information <-
read_sheet(
ss = "1IYMZ0a-yL7LQUgCsy6EZnSjHLBKXC48P9QRE9Kh8Jzo",
sheet = "campaign_information",
range = "A:D"
)
campaign_member_data <- campaign_members %>%
rowwise() %>%
mutate(
matching_campaign = list(
campaign_information %>%
filter(str_detect(sub_campaign_tag, fixed(campaign_keyword)))
)
) %>%
unnest(cols = matching_campaign) %>%
ungroup()
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
library(here)
setwd(here("direct-mail", "campaign-member"))
client_secret_path <- keyring::key_get(
service = "googlesheets4",
username = "client_secret_path"
)
email <- keyring::key_get(service = "googlesheets4", username = "email")
# configure and authenticate using retrieved credentials
gs4_auth_configure(path = client_secret_path)
gs4_auth(email = email, cache = TRUE)
################### loading data ###########################
campaign_members <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] mkt campaign report",
range = "A2:AK"
)
campaign_members <- campaign_members |> clean_names()
campaign_members |>
filter(str_detect(lead_channel,"DM"))
campaign_information <-
read_sheet(
ss = "1IYMZ0a-yL7LQUgCsy6EZnSjHLBKXC48P9QRE9Kh8Jzo",
sheet = "campaign_information",
range = "A:D"
)
campaign_member_data <- campaign_members %>%
rowwise() %>%
mutate(
matching_campaign = list(
campaign_information %>%
filter(str_detect(sub_campaign_tag, fixed(campaign_keyword)))
)
) %>%
unnest(cols = matching_campaign) %>%
ungroup()
gc()
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
library(here)
setwd(here("direct-mail", "campaign-member"))
client_secret_path <- keyring::key_get(
service = "googlesheets4",
username = "client_secret_path"
)
email <- keyring::key_get(service = "googlesheets4", username = "email")
# configure and authenticate using retrieved credentials
gs4_auth_configure(path = client_secret_path)
gs4_auth(email = email, cache = TRUE)
################### loading data ###########################
campaign_members <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] mkt campaign report",
range = "A2:AK"
)
campaign_members <- campaign_members |> clean_names()
campaign_members |>
filter(str_detect(lead_channel,"DM"))
campaign_information <-
read_sheet(
ss = "1IYMZ0a-yL7LQUgCsy6EZnSjHLBKXC48P9QRE9Kh8Jzo",
sheet = "campaign_information",
range = "A:D"
)
campaign_member_data <- campaign_members %>%
rowwise() %>%
mutate(
matching_campaign = list(
campaign_information %>%
filter(str_detect(sub_campaign_tag, fixed(campaign_keyword)))
)
) %>%
unnest(cols = matching_campaign) %>%
ungroup()
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
library(here)
setwd(here("direct-mail", "campaign-member"))
client_secret_path <- keyring::key_get(
service = "googlesheets4",
username = "client_secret_path"
)
email <- keyring::key_get(service = "googlesheets4", username = "email")
# configure and authenticate using retrieved credentials
gs4_auth_configure(path = client_secret_path)
gs4_auth(email = email, cache = TRUE)
################### loading data ###########################
campaign_members <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] mkt campaign report",
range = "A2:AK"
)
campaign_members <- campaign_members |> clean_names()
campaign_members |>
filter(str_detect(lead_channel,"DM"))
campaign_information <-
read_sheet(
ss = "1IYMZ0a-yL7LQUgCsy6EZnSjHLBKXC48P9QRE9Kh8Jzo",
sheet = "campaign_information",
range = "A:D"
)
campaign_member_data <- campaign_members %>%
rowwise() %>%
mutate(
matching_campaign = list(
campaign_information %>%
filter(str_detect(sub_campaign_tag, fixed(campaign_keyword)))
)
) %>%
unnest(cols = matching_campaign) %>%
ungroup()
gc()
gc()
campaign_member_data <- campaign_members %>%
rowwise() %>%
mutate(
matching_campaign = list(
campaign_information %>%
filter(str_detect(sub_campaign_tag, fixed(campaign_keyword)))
)
) %>%
unnest(cols = matching_campaign) %>%
ungroup()
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
library(here)
setwd(here("direct-mail", "campaign-member"))
client_secret_path <- keyring::key_get(
service = "googlesheets4",
username = "client_secret_path"
)
email <- keyring::key_get(service = "googlesheets4", username = "email")
# configure and authenticate using retrieved credentials
gs4_auth_configure(path = client_secret_path)
gs4_auth(email = email, cache = TRUE)
################### loading data ###########################
campaign_members <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] mkt campaign report",
range = "A2:AK"
)
campaign_members <- campaign_members |> clean_names()
campaign_members |>
filter(str_detect(lead_channel,"DM"))
campaign_information <-
read_sheet(
ss = "1IYMZ0a-yL7LQUgCsy6EZnSjHLBKXC48P9QRE9Kh8Jzo",
sheet = "campaign_information",
range = "A:D"
)
campaign_member_data <- campaign_members %>%
rowwise() %>%
mutate(
matching_campaign = list(
campaign_information %>%
filter(str_detect(sub_campaign_tag, fixed(campaign_keyword)))
)
) %>%
unnest(cols = matching_campaign) %>%
ungroup()
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
library(here)
campaign_member_data <- campaign_members %>%
rowwise() %>%
mutate(
matching_campaign = list(
campaign_information %>%
filter(str_detect(sub_campaign_tag, fixed(campaign_keyword)))
)
) %>%
unnest(cols = matching_campaign) %>%
ungroup()
campaign_member_data <- campaign_members %>%
cross_join(campaign_information) %>% # perform a cross join to match all combinations
filter(str_detect(sub_campaign_tag.x, fixed(campaign_keyword))) %>%
filter(str_detect(sub_campaign_tag.y, fixed(campaign_keyword)))
colnames(campaign_members)
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name"="sub_campaign_tag")) %>% # join on a common column
filter(str_detect(sub_campaign_tag, fixed(campaign_keyword)))
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c(campaign_name=sub_campaign_tag)) %>% # join on a common column
filter(str_detect(sub_campaign_tag, fixed(campaign_keyword)))
View(campaign_information)
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name" = "sub_campaign_tag")) %>%
filter(str_detect(campaign_name, fixed(campaign_keyword)) | str_detect(sub_campaign_tag, fixed(campaign_keyword)))
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name" = "sub_campaign_tag"))
View(campaign_member_data)
campaign_members <- campaign_members |>
filter(str_detect(lead_channel,"DM"))
campaign_members <- campaign_members |>
filter(str_detect(lead_channel,"DM"))
View(campaign_members)
gc()
campaign_members <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] mkt campaign report",
range = "A2:AK"
) |>
clean_names() |>
filter(str_detect(lead_channel,"DM"))
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
library(here)
setwd(here("direct-mail", "campaign-member"))
client_secret_path <- keyring::key_get(
service = "googlesheets4",
username = "client_secret_path"
)
email <- keyring::key_get(service = "googlesheets4", username = "email")
# configure and authenticate using retrieved credentials
gs4_auth_configure(path = client_secret_path)
gs4_auth(email = email, cache = TRUE)
################### loading data ###########################
campaign_members <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] mkt campaign report",
range = "A2:AK"
) |>
clean_names() |>
filter(str_detect(lead_channel,"DM"))
campaign_information <-
read_sheet(
ss = "1IYMZ0a-yL7LQUgCsy6EZnSjHLBKXC48P9QRE9Kh8Jzo",
sheet = "campaign_information",
range = "A:D"
)
View(campaign_members)
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name" = "sub_campaign_tag"))
View(campaign_member_data)
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name" = "sub_campaign_tag")) |>
filter(campaign_keyword != NULL)
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name" = "sub_campaign_tag")) |>
filter(campaign_keyword != NULL)
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name" = "sub_campaign_tag")) |>
filter(!is.na(campaign_keyword))
View(campaign_member_data)
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name" = "sub_campaign_tag")) |>
filter(!is.na(campaign_keyword) & !str_detect(campaign_name, "Re-Engagement|Mooncake|Migration"))
View(campaign_member_data)
Re-Engagement Mooncake Migration
View(campaign_member_data)
sapply(campaign_member_data, class)
campaign_member_data <- campaign_member_data %>%
mutate(across(where(is.list), ~ map_chr(., ~ ifelse(is.null(.x), NA, toString(.x)))))
View(campaign_member_data)
campaign_member_data <- campaign_member_data %>%
mutate(month = tolower(month)) %>%
mutate(month_number = match(month, tolower(month.name))) %>%  # Convert month name to number
mutate(campaign_end_date = ceiling_date(ymd(paste0("2024-", month_number, "-01")), "month") - 1)  # Assume year 2024
campaign_member_data <- campaign_member_data %>%
mutate(
member_first_associated_date = as.Date(member_first_associated_date, format = "%Y-%m-%d"),
campaign_period = if_else(member_first_associated_date <= campaign_end_date, "30D", "60D")
)
campaign_member_data <- campaign_member_data %>%
select(-campaign_end_date, -month_number)
campaign_member_data_c <- campaign_member_data %>%
mutate(
# create the 'mel' column, treating nas in unqualified_reason as valid
mel = if_else(!is.na(lead_first_mel_timestamp) &
(is.na(lead_unqualified_reason) |
(tolower(lead_unqualified_reason) != "current client" &
tolower(lead_unqualified_reason) != "duplicate")), TRUE, FALSE),
# create the 'mql' column, treating nas in unqualified_reason as valid
mql = if_else(!is.na(lead_latest_mql_time_stamp) &
(is.na(lead_unqualified_reason) |
!tolower(lead_unqualified_reason) %in% c("current client", "duplicate", "not a restaurant", "incorrect phone number")), TRUE, FALSE),
# create the 'sql' column, treating nas as false
sql = if_else(!is.na(lead_converted_account_account_id), TRUE, FALSE),
# create the 'onboarded' column, treating nas as false
onboarded = if_else(!is.na(lead_converted_opportunity_stage) & lead_converted_opportunity_stage == "Onboarded", TRUE, FALSE)
) %>%
mutate(
# ensuring the logical flow for the funnel stages
sql = if_else(onboarded, TRUE, sql),       # if onboarded is true, sql should be true
mql = if_else(sql, TRUE, mql),             # if sql is true, mql should be true
mel = if_else(mql, TRUE, mel)              # if mql is true, mel should be true
)
summary_data <- campaign_member_data_c %>%
group_by(month, campaign_period) %>%
summarize(
mel_count = sum(mel, na.rm = TRUE),
mql_count = sum(mql, na.rm = TRUE),
sql_count = sum(sql, na.rm = TRUE),
onboarded_count = sum(onboarded, na.rm = TRUE)
) %>%
mutate(
numeric_month = match(tolower(month), tolower(month.name)),
year = if_else(numeric_month >= 10, 2023, 2024)
) %>%
ungroup() |>
select(numeric_month, year, everything())
View(summary_data)
View(campaign_member_data_c)
View(campaign_member_data_c)
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
library(here)
setwd(here("direct-mail", "campaign-member"))
client_secret_path <- keyring::key_get(
service = "googlesheets4",
username = "client_secret_path"
)
email <- keyring::key_get(service = "googlesheets4", username = "email")
# configure and authenticate using retrieved credentials
gs4_auth_configure(path = client_secret_path)
gs4_auth(email = email, cache = TRUE)
################### loading data ###########################
campaign_members <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] mkt campaign report",
range = "A2:AK"
) |>
clean_names() |>
filter(str_detect(lead_channel,"DM"))
campaign_information <-
read_sheet(
ss = "1IYMZ0a-yL7LQUgCsy6EZnSjHLBKXC48P9QRE9Kh8Jzo",
sheet = "campaign_information",
range = "A:D"
)
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name" = "sub_campaign_tag")) |>
filter(!is.na(campaign_keyword) & !str_detect(campaign_name, "Re-Engagement|Mooncake|Migration"))
campaign_member_data <- campaign_member_data %>%
mutate(across(where(is.list), ~ map_chr(., ~ ifelse(is.null(.x), NA, toString(.x)))))
campaign_member_data <- campaign_member_data %>%
mutate(month = tolower(month)) %>%
mutate(month_number = match(month, tolower(month.name))) %>%  # Convert month name to number
mutate(campaign_end_date = ceiling_date(ymd(paste0("2024-", month_number, "-01")), "month") - 1)  # Assume year 2024
campaign_member_data <- campaign_member_data %>%
mutate(
member_first_associated_date = as.Date(member_first_associated_date, format = "%Y-%m-%d"),
campaign_period = if_else(member_first_associated_date <= campaign_end_date, "30D", "60D")
)
campaign_member_data <- campaign_member_data %>%
select(-campaign_end_date, -month_number)
campaign_member_data_c <- campaign_member_data %>%
mutate(
# create the 'mel' column, treating nas in unqualified_reason as valid
mel = if_else(!is.na(lead_first_mel_timestamp) &
(is.na(lead_unqualified_reason) |
(tolower(lead_unqualified_reason) != "current client" &
tolower(lead_unqualified_reason) != "duplicate")), TRUE, FALSE),
# create the 'mql' column, treating nas in unqualified_reason as valid
mql = if_else(!is.na(lead_latest_mql_time_stamp) &
(is.na(lead_unqualified_reason) |
!tolower(lead_unqualified_reason) %in% c("current client", "duplicate", "not a restaurant", "incorrect phone number")), TRUE, FALSE),
# create the 'sql' column, treating nas as false
sql = if_else(!is.na(lead_converted_account_account_id), TRUE, FALSE),
# create the 'onboarded' column, treating nas as false
onboarded = if_else(!is.na(lead_converted_opportunity_stage) & lead_converted_opportunity_stage == "Onboarded", TRUE, FALSE)
) %>%
mutate(
# ensuring the logical flow for the funnel stages
sql = if_else(onboarded, TRUE, sql),       # if onboarded is true, sql should be true
mql = if_else(sql, TRUE, mql),             # if sql is true, mql should be true
mel = if_else(mql, TRUE, mel)              # if mql is true, mel should be true
)
summary_data <- campaign_member_data_c %>%
group_by(month, campaign_period) %>%
summarize(
mel_count = sum(mel, na.rm = TRUE),
mql_count = sum(mql, na.rm = TRUE),
sql_count = sum(sql, na.rm = TRUE),
onboarded_count = sum(onboarded, na.rm = TRUE)
) %>%
mutate(
numeric_month = match(tolower(month), tolower(month.name)),
year = if_else(numeric_month >= 10, 2023, 2024)
) %>%
ungroup() |>
select(numeric_month, year, everything())
write_sheet(summary_data,ss="18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",sheet="SFDC Leads + Campaigns")
View(summary_data)
write_sheet(campaign_member_data_c,ss="18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",sheet="campaign_member_data_c")
>>>>>>> d37afbc3b9b13a533f04b9a97839b0072d2ef4ea
