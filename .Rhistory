)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
is_onboarded == TRUE ~ TRUE,
is_sql == TRUE ~TRUE,
is_mql ==TRUE ~TRUE,
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
all_lead__c <- SQL_runner_results_2025_01_17T00_14_12_484Z |>
filter(!str_detect(latest_campaign, "outbound")) |>
mutate(
is_onboarded = case_when(stage == "Onboarded" ~ TRUE, TRUE ~ FALSE),
is_sql = case_when(
is_onboarded == TRUE ~ TRUE, opportunity_id != "" ~ TRUE,
TRUE ~ FALSE
),
is_mql = case_when(
is_onboarded == TRUE ~ TRUE,
is_sql == TRUE ~ TRUE,
!(is.na(latest_mql_time_stamp))&
!(unqualified_reason %in%
c(
"Current Client",
"Duplicate",
"Not a Restaurant"
)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
is_onboarded == TRUE ~ TRUE,
is_sql == TRUE ~TRUE,
is_mql ==TRUE ~TRUE,
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
all_lead__c <- SQL_runner_results_2025_01_17T00_14_12_484Z |>
filter(!str_detect(latest_campaign, "outbound")) |>
mutate(
is_onboarded = case_when(stage == "Onboarded" ~ TRUE, TRUE ~ FALSE),
is_sql = case_when(
is_onboarded == TRUE ~ TRUE, opportunity_id != "" ~ TRUE,
TRUE ~ FALSE
),
is_mql = case_when(
is_onboarded == TRUE ~ TRUE,
is_sql == TRUE ~ TRUE,
!(is.na(latest_mql_time_stamp))&
!(unqualified_reason %in%
c(
"Current Client",
"Duplicate",
"Not a Restaurant"
)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
is_onboarded == TRUE ~ TRUE,
is_sql == TRUE ~TRUE,
is_mql ==TRUE ~TRUE,
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
View(SQL_runner_results_2025_01_17T00_14_12_484Z)
all_lead__c <- all_lead__r |>
filter(!str_detect(latest_campaign, "outbound") &
!is.na(latest_campaign)) |>
mutate(
mobile_primary = str_replace_all(mobile_primary, "[^\\d]", ""),
business_phone_line_1 = str_replace_all(
str_replace_all(business_phone_line_1, "-", ""),
"[^0-9]", ""
),
is_onboarded = case_when(stage == "Onboarded" ~ TRUE, TRUE ~ FALSE),
is_sql = case_when(
is_onboarded == TRUE ~ TRUE, opportunity_id != "" ~ TRUE,
TRUE ~ FALSE
),
is_mql = case_when(
is_onboarded == TRUE ~ TRUE,
is_sql == TRUE ~ TRUE,
!(is.na(latest_mql_time_stamp))&
!(unqualified_reason %in%
c(
"Current Client",
"Duplicate",
"Not a Restaurant"
)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
is_onboarded == TRUE ~ TRUE,
is_sql == TRUE ~TRUE,
is_mql ==TRUE ~TRUE,
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
late
latest_campaign
lead_2024 <- all_lead__c |>
mutate(
first_mel_timestamp = parse_date_time(first_mel_timestamp, orders = c("ymd HMS", "ymd")),
first_mel_month = format(first_mel_timestamp, "%Y-%m"),
first_mel_year = year(first_mel_timestamp)
) |>
filter(first_mel_year == 2024) |>
select(-first_mel_year) |>
select(first_mel_month, everything())
data_split <- lead_2024 |>
mutate(lead_channel_split = str_split(lead_channel, ";\\s*"),
total_leads = 1) |>
unnest(lead_channel_split) |>
group_by(first_mel_month, lead_channel, total_leads) |>
mutate(channel_counts = n_distinct(lead_channel_split)) |>
ungroup() |>
mutate(funnel_credit = total_leads / channel_counts)
source("~/marketing-operation/max_requested_reports/individual_channel_performance/funnel_metrics_calculatoin.R", echo=TRUE)
View(aggregated_table)
dm_test <- all_lead__c |>
filter(str_detect(lead_channel, "(?)dm") )
dm_test <- all_lead__c |>
filter(str_detect(lead_channel, "(?i)dm") )
lead_2024 <- dm_test |>
mutate(
first_mel_timestamp = parse_date_time(first_mel_timestamp, orders = c("ymd HMS", "ymd")),
first_mel_month = format(first_mel_timestamp, "%Y-%m"),
first_mel_year = year(first_mel_timestamp)
) |>
filter(first_mel_year == 2024) |>
select(-first_mel_year) |>
select(first_mel_month, everything())
data_split <- lead_2024 |>
mutate(lead_channel_split = str_split(lead_channel, ";\\s*"),
total_leads = 1) |>
unnest(lead_channel_split) |>
group_by(first_mel_month, lead_channel, total_leads) |>
mutate(channel_counts = n_distinct(lead_channel_split)) |>
ungroup() |>
mutate(funnel_credit = total_leads / channel_counts)
aggregated_table <- data_split |>
group_by(lead_channel_split, first_mel_month) |>
summarise(total_mel = sum(funnel_credit * is_mel),
total_mql = sum(funnel_credit * is_mql),
total_sql = sum(funnel_credit * is_sql),
total_onboarded = sum(funnel_credit * is_onboarded),
.groups = "drop")
View(aggregated_table)
View(all_lead__r)
all_lead__c <- all_lead__r |>
filter( !is.na(latest_campaign),
!str_detect(latest_campaign, "outbound")) |>
mutate(
mobile_primary = str_replace_all(mobile_primary, "[^\\d]", ""),
business_phone_line_1 = str_replace_all(
str_replace_all(business_phone_line_1, "-", ""),
"[^0-9]", ""
),
is_onboarded = case_when(stage == "Onboarded" ~ TRUE, TRUE ~ FALSE),
is_sql = case_when(
is_onboarded == TRUE ~ TRUE, opportunity_id != "" ~ TRUE,
TRUE ~ FALSE
),
is_mql = case_when(
is_onboarded == TRUE ~ TRUE,
is_sql == TRUE ~ TRUE,
!(is.na(latest_mql_time_stamp))&
!(unqualified_reason %in%
c(
"Current Client",
"Duplicate",
"Not a Restaurant"
)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
is_onboarded == TRUE ~ TRUE,
is_sql == TRUE ~TRUE,
is_mql ==TRUE ~TRUE,
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
dm_test <- all_lead__c |>
filter(str_detect(lead_channel, "(?i)dm") )
lead_2024 <- dm_test |>
mutate(
first_mel_timestamp = parse_date_time(first_mel_timestamp, orders = c("ymd HMS", "ymd")),
first_mel_month = format(first_mel_timestamp, "%Y-%m"),
first_mel_year = year(first_mel_timestamp)
) |>
filter(first_mel_year == 2024) |>
select(-first_mel_year) |>
select(first_mel_month, everything())
data_split <- lead_2024 |>
mutate(lead_channel_split = str_split(lead_channel, ";\\s*"),
total_leads = 1) |>
unnest(lead_channel_split) |>
group_by(first_mel_month, lead_channel, total_leads) |>
mutate(channel_counts = n_distinct(lead_channel_split)) |>
ungroup() |>
mutate(funnel_credit = total_leads / channel_counts)
aggregated_table <- data_split |>
group_by(lead_channel_split, first_mel_month) |>
summarise(total_mel = sum(funnel_credit * is_mel),
total_mql = sum(funnel_credit * is_mql),
total_sql = sum(funnel_credit * is_sql),
total_onboarded = sum(funnel_credit * is_onboarded),
.groups = "drop")
View(all_lead__c)
View(aggregated_table)
all_lead__c <- all_lead__r |>
filter( !is.na(latest_campaign),
!str_detect(latest_campaign, "outbound")) |>
mutate(
mobile_primary = str_replace_all(mobile_primary, "[^\\d]", ""),
business_phone_line_1 = str_replace_all(
str_replace_all(business_phone_line_1, "-", ""),
"[^0-9]", ""
),
is_onboarded = case_when(stage == "Onboarded" ~ TRUE, TRUE ~ FALSE),
is_sql = case_when(
opportunity_id != "" ~ TRUE,
TRUE ~ FALSE
),
is_mql = case_when(
!(is.na(latest_mql_time_stamp))&
!(unqualified_reason %in%
c(
"Current Client",
"Duplicate",
"Not a Restaurant"
)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
sheet_write(all_lead__c,
ss="1KRaC1IeLlMmufiiOuPnicMJr132LP9MYl4eRDVKXS3k",
sheet="2024 Raw Data")
all_lead__c <- all_lead__r |>
filter( !is.na(latest_campaign),
!str_detect(latest_campaign, "outbound")) |>
mutate(
mobile_primary = str_replace_all(mobile_primary, "[^\\d]", ""),
business_phone_line_1 = str_replace_all(
str_replace_all(business_phone_line_1, "-", ""),
"[^0-9]", ""
),
is_onboarded = case_when(stage == "Onboarded" ~ TRUE, TRUE ~ FALSE),
is_sql = case_when(
opportunity_id != "" ~ TRUE,
TRUE ~ FALSE
),
is_mql = case_when(
!(is.na(latest_mql_time_stamp))&
!(unqualified_reason %in%
c(
"Current Client",
"Duplicate",
"Not a Restaurant"
)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
dm_test <- all_lead__c |>
filter(str_detect(lead_channel, "(?i)dm") )
lead_2024 <- dm_test |>
mutate(
first_mel_timestamp = parse_date_time(first_mel_timestamp, orders = c("ymd HMS", "ymd")),
first_mel_month = format(first_mel_timestamp, "%Y-%m"),
first_mel_year = year(first_mel_timestamp)
) |>
filter(first_mel_year == 2024) |>
select(-first_mel_year) |>
select(first_mel_month, everything())
data_split <- lead_2024 |>
mutate(lead_channel_split = str_split(lead_channel, ";\\s*"),
total_leads = 1) |>
unnest(lead_channel_split) |>
group_by(first_mel_month, lead_channel, total_leads) |>
mutate(channel_counts = n_distinct(lead_channel_split)) |>
ungroup() |>
mutate(funnel_credit = total_leads / channel_counts)
aggregated_table <- data_split |>
group_by(lead_channel_split, first_mel_month) |>
summarise(total_mel = sum(funnel_credit * is_mel),
total_mql = sum(funnel_credit * is_mql),
total_sql = sum(funnel_credit * is_sql),
total_onboarded = sum(funnel_credit * is_onboarded),
.groups = "drop")
View(aggregated_table)
write_csv(all_lead__c, "~/marketing-operation/max_requested_reports/individual_channel_performance/all_time_leads_1_14_2025.csv")
all_lead__c <- all_lead__r |>
filter( !is.na(latest_campaign),
!str_detect(latest_campaign, "outbound")) |>
mutate(
mobile_primary = str_replace_all(mobile_primary, "[^\\d]", ""),
business_phone_line_1 = str_replace_all(
str_replace_all(business_phone_line_1, "-", ""),
"[^0-9]", ""
),
is_onboarded = case_when(stage == "Onboarded" ~ TRUE, TRUE ~ FALSE),
is_sql = case_when(
opportunity_id != "" ~ TRUE,
TRUE ~ FALSE
),
is_mql = case_when(
!(is.na(latest_mql_time_stamp))&
!(unqualified_reason %in%
c(
"Current Client",
"Duplicate",
"Not a Restaurant"
)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
write_csv(all_lead__c, "~/marketing-operation/max_requested_reports/individual_channel_performance/all_time_leads_1_14_2025.csv")
rm(list = setdiff(ls(), "all_lead__c"))
dm_test <- all_lead__c |>
filter(str_detect(lead_channel, "(?i)dm") )
lead_2024 <- dm_test |>
mutate(
first_mel_timestamp = parse_date_time(first_mel_timestamp, orders = c("ymd HMS", "ymd")),
first_mel_month = format(first_mel_timestamp, "%Y-%m"),
first_mel_year = year(first_mel_timestamp)
) |>
filter(first_mel_year == 2024) |>
select(-first_mel_year) |>
select(first_mel_month, everything())
data_split <- lead_2024 |>
mutate(lead_channel_split = str_split(lead_channel, ";\\s*"),
total_leads = 1) |>
unnest(lead_channel_split) |>
group_by(first_mel_month, lead_channel, total_leads) |>
mutate(channel_counts = n_distinct(lead_channel_split)) |>
ungroup() |>
mutate(funnel_credit = total_leads / channel_counts)
View(data_split)
all_lead__c <- all_lead__r |>
filter( !is.na(latest_campaign),
!str_detect(latest_campaign, "outbound")) |>
mutate(
first_mel_timestamp = parse_date_time(first_mel_timestamp, orders = c("ymd HMS", "ymd")),
first_mel_month = format(first_mel_timestamp, "%Y-%m"),
first_mel_year = year(first_mel_timestamp)
) |>
mutate(
mobile_primary = str_replace_all(mobile_primary, "[^\\d]", ""),
business_phone_line_1 = str_replace_all(
str_replace_all(business_phone_line_1, "-", ""),
"[^0-9]", ""
),
is_onboarded = case_when(stage == "Onboarded" ~ TRUE, TRUE ~ FALSE),
is_sql = case_when(
opportunity_id != "" ~ TRUE,
TRUE ~ FALSE
),
is_mql = case_when(
!(is.na(latest_mql_time_stamp))&
!(unqualified_reason %in%
c(
"Current Client",
"Duplicate",
"Not a Restaurant"
)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
all_lead__r <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] Marketing MEL/MQL Report",
range = "A:AM"
) |>
clean_names()
write_csv(all_lead__c, "~/marketing-operation/max_requested_reports/individual_channel_performance/all_time_leads_1_14_2025.csv", na = "")
m_test <- all_lead__c |>
filter(str_detect(lead_channel, "(?i)dm") )
lead_2024 <- dm_test |>
filter(first_mel_year == 2024) |>
select(-first_mel_year) |>
select(first_mel_month, everything())
all_lead__c <- all_lead__r |>
filter( !is.na(latest_campaign),
!str_detect(latest_campaign, "outbound")) |>
mutate(
first_mel_timestamp = parse_date_time(first_mel_timestamp, orders = c("ymd HMS", "ymd")),
first_mel_month = format(first_mel_timestamp, "%Y-%m"),
first_mel_year = year(first_mel_timestamp)
) |>
mutate(
mobile_primary = str_replace_all(mobile_primary, "[^\\d]", ""),
business_phone_line_1 = str_replace_all(
str_replace_all(business_phone_line_1, "-", ""),
"[^0-9]", ""
),
is_onboarded = case_when(stage == "Onboarded" ~ TRUE, TRUE ~ FALSE),
is_sql = case_when(
opportunity_id != "" ~ TRUE,
TRUE ~ FALSE
),
is_mql = case_when(
!(is.na(latest_mql_time_stamp))&
!(unqualified_reason %in%
c(
"Current Client",
"Duplicate",
"Not a Restaurant"
)) ~ TRUE,
TRUE ~ FALSE
),
is_mel = case_when(
!(is.na(first_mel_timestamp)) &
!(unqualified_reason %in% c("Current Client", "Duplicate")) ~ TRUE,
TRUE ~ FALSE
)
) |>
rename(business_phone = business_phone_line_1) |>
select(is_mel, is_mql, is_sql, is_onboarded, everything())
dm_test <- all_lead__c |>
filter(str_detect(lead_channel, "(?i)dm") )
lead_2024 <- dm_test |>
filter(first_mel_year == 2024) |>
select(-first_mel_year) |>
select(first_mel_month, everything())
data_split <- lead_2024 |>
mutate(lead_channel_split = str_split(lead_channel, ";\\s*"),
total_leads = 1) |>
unnest(lead_channel_split) |>
group_by(first_mel_month, lead_channel, total_leads) |>
mutate(channel_counts = n_distinct(lead_channel_split)) |>
ungroup() |>
mutate(funnel_credit = total_leads / channel_counts)
aggregated_table <- data_split |>
group_by(lead_channel_split, first_mel_month) |>
summarise(total_mel = sum(funnel_credit * is_mel),
total_mql = sum(funnel_credit * is_mql),
total_sql = sum(funnel_credit * is_sql),
total_onboarded = sum(funnel_credit * is_onboarded),
.groups = "drop")
View(aggregated_table)
lead_2024 <- all_lead__c |>
filter(first_mel_year == 2024) |>
select(-first_mel_year) |>
select(first_mel_month, everything())
data_split <- lead_2024 |>
mutate(lead_channel_split = str_split(lead_channel, ";\\s*"),
total_leads = 1) |>
unnest(lead_channel_split) |>
group_by(first_mel_month, lead_channel, total_leads) |>
mutate(channel_counts = n_distinct(lead_channel_split)) |>
ungroup() |>
mutate(funnel_credit = total_leads / channel_counts)
aggregated_table <- data_split |>
group_by(lead_channel_split, first_mel_month) |>
summarise(total_mel = sum(funnel_credit * is_mel),
total_mql = sum(funnel_credit * is_mql),
total_sql = sum(funnel_credit * is_sql),
total_onboarded = sum(funnel_credit * is_onboarded),
.groups = "drop")
View(aggregated_table)
getwd()
write_csv(aggregated_table, "/Users/yukachen/marketing-operation/max_requested_reports/individual_channel_performance/aggregated_table.csv")
write_csv(aggregated_table, "/Users/yukachen/marketing-operation/max_requested_reports/individual_channel_performance/aggregated_table.csv", na = "")
