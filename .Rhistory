coalesce(!!!syms(intersect(c("姓氏", "Last Name"), colnames(data))))
},
phone_number = if (any(grepl("(?i)mobile number", colnames(data))) || any(grepl("(?i)手机号码", colnames(data)))) {
coalesce(!!!syms(intersect(c("手机号码", "Mobile Number"), colnames(data))))
},
state = if (any(grepl("(?i)state", colnames(data))) || any(grepl("(?i)州", colnames(data)))) {
coalesce(!!!syms(intersect(c("州", "State"), colnames(data))))
},
cuisine_type = if (any(grepl("(?i)cuisine type", colnames(data))) || any(grepl("(?i)餐馆菜系", colnames(data)))) {
coalesce(!!!syms(intersect(c("餐馆菜系", "Cuisine Type"), colnames(data))))
},
email = if (any(grepl("(?i)Email", colnames(data))) || any(grepl("(?i)您的邮箱地址", colnames(data)))) {
coalesce(!!!syms(intersect(c("Email", "您的邮箱地址"), colnames(data))))
},
campaign = str_extract(data$Referrer, "(?<=getskt\\.com/)[^/]+")
) |>
select(-c(
if ("姓氏" %in% colnames(data)) "姓氏" else NULL,
if ("Last Name" %in% colnames(data)) "Last Name" else NULL,
if ("手机号码" %in% colnames(data)) "手机号码" else NULL,
if ("Mobile Number" %in% colnames(data)) "Mobile Number" else NULL,
if ("州" %in% colnames(data)) "州" else NULL,
if ("State" %in% colnames(data)) "State" else NULL,
if ("餐馆菜系" %in% colnames(data)) "餐馆菜系" else NULL,
if ("Cuisine Type" %in% colnames(data)) "Cuisine Type" else NULL
))
}) |>
select(name, phone_number) |>
select(where(~ !all(is.na(.)))) |>
filter(!str_detect(name, "(?i)marketing|test"))
View(sep_form)
sep_form <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE) |>
map_df(~ {
data <- read_csv(.x)
data |>
mutate(
name = if (any(grepl("(?i)last name", colnames(data))) || any(grepl("(?i)姓氏", colnames(data)))) {
coalesce(!!!syms(intersect(c("姓氏", "Last Name"), colnames(data))))
},
phone_number = if (any(grepl("(?i)mobile number", colnames(data))) || any(grepl("(?i)手机号码", colnames(data)))) {
coalesce(!!!syms(intersect(c("手机号码", "Mobile Number"), colnames(data))))
},
state = if (any(grepl("(?i)state", colnames(data))) || any(grepl("(?i)州", colnames(data)))) {
coalesce(!!!syms(intersect(c("州", "State"), colnames(data))))
},
cuisine_type = if (any(grepl("(?i)cuisine type", colnames(data))) || any(grepl("(?i)餐馆菜系", colnames(data)))) {
coalesce(!!!syms(intersect(c("餐馆菜系", "Cuisine Type"), colnames(data))))
},
email = if (any(grepl("(?i)Email", colnames(data))) || any(grepl("(?i)您的邮箱地址", colnames(data)))) {
coalesce(!!!syms(intersect(c("Email", "您的邮箱地址"), colnames(data))))
},
campaign = str_extract(data$Referrer, "(?<=getskt\\.com/)[^/]+")
) |>
select(-c(
if ("姓氏" %in% colnames(data)) "姓氏" else NULL,
if ("Last Name" %in% colnames(data)) "Last Name" else NULL,
if ("手机号码" %in% colnames(data)) "手机号码" else NULL,
if ("Mobile Number" %in% colnames(data)) "Mobile Number" else NULL,
if ("州" %in% colnames(data)) "州" else NULL,
if ("State" %in% colnames(data)) "State" else NULL,
if ("餐馆菜系" %in% colnames(data)) "餐馆菜系" else NULL,
if ("Cuisine Type" %in% colnames(data)) "Cuisine Type" else NULL
))
}) |>
select(name, phone_number, everything(~.)) |>
select(where(~ !all(is.na(.)))) |>
filter(!str_detect(name, "(?i)marketing|test"))
View(sep_form)
sep_form <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE) |>
map_df(~ {
data <- read_csv(.x)
data |>
mutate(
name = if (any(grepl("(?i)last name", colnames(data))) || any(grepl("(?i)姓氏", colnames(data)))) {
coalesce(!!!syms(intersect(c("姓氏", "Last Name"), colnames(data))))
},
phone_number = if (any(grepl("(?i)mobile number", colnames(data))) || any(grepl("(?i)手机号码", colnames(data)))) {
coalesce(!!!syms(intersect(c("手机号码", "Mobile Number"), colnames(data))))
},
state = if (any(grepl("(?i)state", colnames(data))) || any(grepl("(?i)州", colnames(data)))) {
coalesce(!!!syms(intersect(c("州", "State"), colnames(data))))
},
cuisine_type = if (any(grepl("(?i)cuisine type", colnames(data))) || any(grepl("(?i)餐馆菜系", colnames(data)))) {
coalesce(!!!syms(intersect(c("餐馆菜系", "Cuisine Type"), colnames(data))))
},
email = if (any(grepl("(?i)Email", colnames(data))) || any(grepl("(?i)您的邮箱地址", colnames(data)))) {
coalesce(!!!syms(intersect(c("Email", "您的邮箱地址"), colnames(data))))
},
campaign = str_extract(data$Referrer, "(?<=getskt\\.com/)[^/]+")
) |>
select(-c(
if ("姓氏" %in% colnames(data)) "姓氏" else NULL,
if ("Last Name" %in% colnames(data)) "Last Name" else NULL,
if ("手机号码" %in% colnames(data)) "手机号码" else NULL,
if ("Mobile Number" %in% colnames(data)) "Mobile Number" else NULL,
if ("州" %in% colnames(data)) "州" else NULL,
if ("State" %in% colnames(data)) "State" else NULL,
if ("餐馆菜系" %in% colnames(data)) "餐馆菜系" else NULL,
if ("Cuisine Type" %in% colnames(data)) "Cuisine Type" else NULL
))
}) |>
select(name, phone_number, everything()) |>
select(where(~ !all(is.na(.)))) |>
filter(!str_detect(name, "(?i)marketing|test"))
View(sep_form)
colnames(sep_form)
sep_form <- list.files(folder_path, pattern = "\\.csv$", full.names = TRUE) |>
map_df(~ {
data <- read_csv(.x)
data |>
mutate(
name = if (any(grepl("(?i)last name", colnames(data))) || any(grepl("(?i)姓氏", colnames(data)))) {
coalesce(!!!syms(intersect(c("姓氏", "Last Name"), colnames(data))))
},
phone_number = if (any(grepl("(?i)mobile number", colnames(data))) || any(grepl("(?i)手机号码", colnames(data)))) {
coalesce(!!!syms(intersect(c("手机号码", "Mobile Number"), colnames(data))))
},
state = if (any(grepl("(?i)state", colnames(data))) || any(grepl("(?i)州", colnames(data)))) {
coalesce(!!!syms(intersect(c("州", "State"), colnames(data))))
},
cuisine_type = if (any(grepl("(?i)cuisine type", colnames(data))) || any(grepl("(?i)餐馆菜系", colnames(data)))) {
coalesce(!!!syms(intersect(c("餐馆菜系", "Cuisine Type"), colnames(data))))
},
email = if (any(grepl("(?i)Email", colnames(data))) || any(grepl("(?i)您的邮箱地址", colnames(data)))) {
coalesce(!!!syms(intersect(c("Email", "您的邮箱地址"), colnames(data))))
},
campaign = str_extract(data$Referrer, "(?<=getskt\\.com/)[^/]+")
) |>
select(-c(
if ("姓氏" %in% colnames(data)) "姓氏" else NULL,
if ("Last Name" %in% colnames(data)) "Last Name" else NULL,
if ("手机号码" %in% colnames(data)) "手机号码" else NULL,
if ("Mobile Number" %in% colnames(data)) "Mobile Number" else NULL,
if ("州" %in% colnames(data)) "州" else NULL,
if ("State" %in% colnames(data)) "State" else NULL,
if ("餐馆菜系" %in% colnames(data)) "餐馆菜系" else NULL,
if ("Cuisine Type" %in% colnames(data)) "Cuisine Type" else NULL
))
}) |>
select(name, phone_number, campaign, `Form Name (ID)`, everything()) |>
select(where(~ !all(is.na(.)))) |>
filter(!str_detect(name, "(?i)marketing|test"))
View(sep_form)
write_sheet(sep_form,
ss = "18y8li4QmbStR-6XFc-Vx8o9qzTDJrGIExAObVzG8RpE",
sheet = "Sep Campaign")
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
source("/Users/yukachen/marketing-operation/data/lead_campaign.R")
dm_lead_campaign_c <- final_campaign_sfdc_lead |>
filter(
str_detect(campaign_name, "(?i)Mkt_DM_Snowflake_2024")
)
write_sheet(dm_lead_campaign_c,
ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
sheet = "Lead Data (+Campaign)"
)
rm(list = setdiff(ls(), c("dm_lead_campaign_c")))
source("/Users/yukachen/marketing-operation/direct-mail/overall-data/marketing_dm_leads_from_sfdc.R")
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
source("/Users/yukachen/marketing-operation/data/lead_campaign.R")
dm_lead_campaign_c <- final_campaign_sfdc_lead |>
filter(
str_detect(campaign_name, "(?i)Mkt_DM_Snowflake_2024")
)
write_sheet(dm_lead_campaign_c,
ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
sheet = "Lead Data (+Campaign)"
)
rm(list = setdiff(ls(), c("dm_lead_campaign_c")))
source("/Users/yukachen/marketing-operation/direct-mail/overall-data/marketing_dm_leads_from_sfdc.R")
source("/Users/yukachen/marketing-operation/direct-mail/overall-data/marketing_dm_leads_from_sfdc.R")
View(dm_lead_campaign_c)
testing <- dm_lead_campaign_c |>
filter(str_detect(campaign_name,"(?i)2024sep"))
View(testing)
sep_dm_leads <- dm_lead_campaign_c |>
filter(str_detect(campaign_name,"(?i)2024sep"))
sep_dm_leads |>
group_by(campaign_name) |>
summarise(
MEL = count(mel),
MQL = count(mql),
SQL = count(sql),
Onboarded = count(onboarded)
)
sep_dm_leads |>
group_by(campaign_name) |>
summarise(
MEL = count(mel[mel==TRUE]),
MQL = count(mql[mql==TRUE]),
SQL = count(sql[sql==TRUE]),
Onboarded = count(onboarded[onboarded==TRUE])
)
sep_dm_leads |>
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
sheet_append(ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_dm_leads,
sheet = "Sep",
range =" A3:E5")
write_sheet(ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_dm_leads,
sheet = "Sep",
range =" A3:E5")
range_write(
ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_dm_leads,
sheet = "Sep",
range = "A3"
)
write_sheet( ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_dm_leads,
sheet = "Sep")
range_write(
ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_dm_campaign_summary,
sheet = "Sep",
range = "A2"
)
sep_dm_campaign_summary <- sep_dm_leads |>
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
range_write(
ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_dm_campaign_summary,
sheet = "Sep",
range = "A2"
)
sep_dm_campaign__ibcall_summary <- sep_dm_leads |>
filter(flow == "inbound call")
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
View(sep_dm_leads)
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
colnames(sep_dm_leads)
sep_dm_campaign__ibcall_summary <- sep_dm_leads |>
filter(flow == "inbound call") |>
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
range_write(
ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_dm_campaign__ibcall_summary,
sheet = "Sep",
range = "A5"
)
sep_dm_campaign__ibcall_summary <- sep_dm_leads |>
filter(flow == "inbound call") |>
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
range_write(
ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_dm_campaign__ibcall_summary,
sheet = "Sep",
range = "A7"
)
sep_dm_campaign_webflow_summary <- sep_dm_leads |>
filter(flow == "webflow") |>
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
range_write(
ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_dm_campaign_webflow_summary,
sheet = "Sep",
range = "A7"
)
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
library(here)
setwd(here("direct-mail", "campaign-member"))
client_secret_path <- keyring::key_get(
service = "googlesheets4",
username = "client_secret_path"
)
email <- keyring::key_get(service = "googlesheets4", username = "email")
# configure and authenticate using retrieved credentials
gs4_auth_configure(path = client_secret_path)
gs4_auth(email = email, cache = TRUE)
################### loading data ###########################
campaign_members <-
read_sheet(
ss = "1xy2bw5ckuUod-5In2iZZuWxuIxvMqzI-fF_jODddGVg",
sheet = "[all time] mkt campaign report",
range = "A1:AL"
) |>
clean_names() |>
filter(str_detect(lead_channel, "DM"))
campaign_information <-
read_sheet(
ss = "1IYMZ0a-yL7LQUgCsy6EZnSjHLBKXC48P9QRE9Kh8Jzo",
sheet = "campaign_information",
range = "A:D"
)
campaign_member_data <- campaign_members %>%
left_join(campaign_information, by = c("campaign_name" = "sub_campaign_tag")) |>
filter(!is.na(campaign_keyword) & !str_detect(campaign_name, "Re-Engagement|Mooncake|Migration"))
campaign_member_data <- campaign_member_data %>%
mutate(across(where(is.list), ~ map_chr(., ~ ifelse(is.null(.x), NA, toString(.x)))))
campaign_member_data <- campaign_member_data %>%
mutate(month = tolower(month)) %>%
mutate(month_number = match(month, tolower(month.name))) %>% # Convert month name to number
mutate(campaign_end_date = ceiling_date(ymd(paste0("2024-", month_number, "-01")), "month") - 1) # Assume year 2024
campaign_member_data <- campaign_member_data %>%
mutate(
member_first_associated_date = as.Date(member_first_associated_date, format = "%Y-%m-%d"),
lead_first_mel_timestamp = as.Date(lead_first_mel_timestamp, format = "%Y-%m-%d"),
lead_latest_mql_time_stamp = as.Date(lead_latest_mql_time_stamp, format = "%Y-%m-%d"),
lead_converted_opportunity_created_date = as.Date(lead_converted_opportunity_created_date, format = "%Y-%m-%d"),
lead_converted_account_pos_first_order_date = as.Date(lead_converted_account_pos_first_order_date, format = "%Y-%m-%d"),
campaign_end_date = ceiling_date(ymd(paste0("2024-", month_number, "-01")), "month") - 1
)
campaign_member_data <- campaign_member_data %>%
mutate(
mel_campaign_period = if_else(lead_first_mel_timestamp <= campaign_end_date, "30D", "60D"),
mql_campaign_period = if_else(lead_latest_mql_time_stamp <= campaign_end_date, "30D", "60D"),
sql_campaign_period = if_else(lead_converted_opportunity_created_date <= campaign_end_date, "30D", "60D"),
cw_onboarded_campaign_period = if_else(lead_converted_account_pos_first_order_date <= campaign_end_date, "30D", "60D")
)
campaign_member_data2 <- campaign_member_data %>%
select(-campaign_end_date, -month_number)
campaign_member_data2 <- campaign_member_data %>%
mutate(
# create the 'mel' column, treating nas in unqualified_reason as valid
mel = if_else(!is.na(lead_first_mel_timestamp) &
(is.na(lead_unqualified_reason) |
(tolower(lead_unqualified_reason) != "current client" &
tolower(lead_unqualified_reason) != "duplicate")), TRUE, FALSE),
# create the 'mql' column, treating nas in unqualified_reason as valid
mql = if_else(!is.na(lead_latest_mql_time_stamp) &
(is.na(lead_unqualified_reason) |
!tolower(lead_unqualified_reason) %in% c("current client", "duplicate", "not a restaurant", "incorrect phone number")), TRUE, FALSE),
# create the 'sql' column, treating nas as false
sql = if_else(!is.na(lead_converted_account_account_id), TRUE, FALSE),
# create the 'onboarded' column, treating nas as false
onboarded = if_else(!is.na(lead_converted_opportunity_stage) & lead_converted_opportunity_stage == "Onboarded", TRUE, FALSE)
) %>%
mutate(
# ensuring the logical flow for the funnel stages
sql = if_else(onboarded, TRUE, sql), # if onboarded is true, sql should be true
mql = if_else(sql, TRUE, mql), # if sql is true, mql should be true
mel = if_else(mql, TRUE, mel) # if mql is true, mel should be true
)
write_sheet(campaign_member_data2, ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU", sheet = "campaign_member_data2")
campaign_member_data_c <- campaign_member_data_c %>%
mutate(lead_created_date = as.Date(lead_created_date, format = "%Y-%m-%d")) # Adjust format if necessary
source("~/marketing-operation/direct-mail/campaign-member/campaign_member_cleaning.R", echo=TRUE)
rid_data <- campaign_member_data_c |>
filter(onboarded == TRUE) |>
select(campaign_name, campaign_keyword, subgroup, lead_converted_opportunity_restaurant_id, flow, campaign_end_date	,mel_campaign_period,	mql_campaign_period	,sql_campaign_period,	cw_onboarded_campaign_period,	mel	,mql,	sql	,onboarded)
write_sheet(rid_data, ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU", sheet = "RID")
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
source("/Users/yukachen/marketing-operation/data/lead_campaign.R")
sms_lead_campaign_c <- final_campaign_sfdc_lead |>
filter(
str_detect(campaign_name, "(?i)Mkt_sms")
)
write_sheet(sms_lead_campaign_c,
ss = "15bKc-5i_FiSgwncF1-0M50cZSrpttoSstlx2UhQJLFU",
sheet = "SMS Lead Data (+Campaign)"
)
rm(list = setdiff(ls(), c("sms_lead_campaign_c")))
sms_lead_campaign_c <- final_campaign_sfdc_lead |>
filter(
str_detect(campaign_name, "(?i)Mkt_sms") &
!str_detect(campaign_name, "(?i)outbound")
)
library(tidyverse)
library(salesforcer)
library(yaml)
library(httr)
library(googlesheets4)
library(keyring)
library(janitor)
source("/Users/yukachen/marketing-operation/data/lead_campaign.R")
sms_lead_campaign_c <- final_campaign_sfdc_lead |>
filter(
str_detect(campaign_name, "(?i)Mkt_sms") &
!str_detect(campaign_name, "(?i)outbound")
)
write_sheet(sms_lead_campaign_c,
ss = "15bKc-5i_FiSgwncF1-0M50cZSrpttoSstlx2UhQJLFU",
sheet = "SMS Lead Data (+Campaign)"
)
write_sheet(sms_lead_campaign_c,
ss = "15bKc-5i_FiSgwncF1-0M50cZSrpttoSstlx2UhQJLFU",
sheet = "SMS Lead Data (+Campaign)"
)
source("/Users/yukachen/marketing-operation/direct-mail/overall-data/marketing_sms_leads_from_sfdc.R")
sep_sms_leads <- sms_lead_campaign_c |>
filter(str_detect(campaign_name,"(?i)2024sep"))
write_sheet( ss = "18viPByX4RQQx6D7PBC7COCnZwQSPB5bEjPBxLEDx8gU",
data = sep_sms_leads,
sheet = "Sep")
sep_sms_campaign_summary <- sep_sms_leads |>
filter(lead_category_sfdc!="Ountbound")
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
colnames(sep_sms_campaign_summary)
sep_sms_campaign_summary <- sep_sms_leads |>
filter(lead_category_sfdc != "Ountbound") |>
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
range_write(
ss = "15bKc-5i_FiSgwncF1-0M50cZSrpttoSstlx2UhQJLFU",
data = sep_sms_campaign_summary,
sheet = "Sep",
range = "A2"
)
range_write(
ss = "15bKc-5i_FiSgwncF1-0M50cZSrpttoSstlx2UhQJLFU",
data = sep_sms_campaign_summary,
sheet = "Sep",
range = "A2"
)
View(sms_lead_campaign_c)
sep_sms_campaign_summary <- sep_sms_leads |>
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
View(sep_sms_campaign_summary)
range_write(
ss = "15bKc-5i_FiSgwncF1-0M50cZSrpttoSstlx2UhQJLFU",
data = sep_sms_campaign_summary,
sheet = "Sep",
range = "A2"
)
sep_sms_campaign_summary <- sep_sms_leads |>
group_by(campaign_name) |>
summarise(
MEL = sum(mel == TRUE, na.rm = TRUE),
MQL = sum(mql == TRUE, na.rm = TRUE),
SQL = sum(sql == TRUE, na.rm = TRUE),
Onboarded = sum(onboarded == TRUE, na.rm = TRUE)
)
range_write(
ss = "15bKc-5i_FiSgwncF1-0M50cZSrpttoSstlx2UhQJLFU",
data = sep_sms_campaign_summary,
sheet = "Sep",
range = "A2"
)
